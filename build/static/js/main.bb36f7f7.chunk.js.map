{"version":3,"sources":["components/Sprite.js","components/Table/index.js","components/H3/index.js","components/H2/index.js","components/PageHeader/index.js","context/dataContext.js","utils/levelFilter.js","components/Table/NonGearRow.js","pages/Items.js","components/Table/GearRow.js","components/Navigation/index.js","components/Footer/index.js","pages/Home.js","components/LevelCalc/index.js","pages/Player.js","components/Table/MonsterRow.js","pages/Monsters.js","components/Table/DungeonRow.js","components/HiddenCoveMonsters.js","pages/Dungeons.js","utils/npcLocation.js","components/Table/QuestRow.js","pages/Quests.js","components/Crafting.js","components/Fishing.js","components/Digging.js","components/Finding.js","components/TMaps.js","pages/Activities.js","components/GearsShops.js","components/MagicShops.js","components/InnShops.js","pages/Shops.js","pages/Map.js","App.js","index.js"],"names":["Sprite","tile","spriteSheet","restProps","style","png","background","process","backgroundPosition","margin","image","Table","header","rows","className","map","head","id","toUpperCase","row","data","H3","children","useState","isExpanded","setIsExpanded","onClick","content","target","parentNode","nextSibling","display","H2","PageHeader","tablaOfContent","length","splice","link","DataContext","React","createContext","DataContextProvider","equipments","setEquipments","items","setItems","levels","setLevels","monsters","setMonsters","quests","setQuests","skillsSpell","setSkillsSpell","useEffect","fetch","then","res","json","sortedLevels","levelFilter","forEach","filter","name","level","_","floors","includes","reverse","Provider","value","codeName","NonGearRow","type","sort","a","b","reduce","acc","item","split","join","title","alt","to","action","Array","isArray","delta","attribute","desc","cost","dropedBy","chance","toFixed","replace","foundIn","slice","quest","setsBonus","bonus","Items","useContext","spell","hash","useLocation","document","querySelector","scrollIntoView","window","scrollTo","Object","keys","href","global","githubUrl","substring","GearRow","set","sets","1","2","3","4","5","6","7","8","9","10","11","12","13","14","classes","clas","attackMod","defenceMod","ItemModifier","modifiers","modifier","modif","Navigation","path","pathname","Footer","rel","Home","visibility","position","txt","LevelCalc","startLevel","setStartLevel","targetLevel","setTargetLevel","onChange","getExpToLevel","pets","maxLevel","baseHp","hpGain","baseAtk","atkGain","baseDef","defGain","baseCharge","chargeGain","names","abilities","evolve","warSprite","archSprite","wizSprite","Dungeons","war_skills","arch_skills","statLevel","setStatLevel","key","width","skill","charge","__","i","push","getStat","getSubStat","e","preventDefault","pet","abi","base","stat","Math","floor","MonsterRow","isRare","monster","statistics","health","attack","defence","zen","rage","exp","kingdom","GetDrop","itemChance","ItemsDrop","ItemChance","onein","maxChance","cur","Monsters","DungeonRows","dungeons","customData","idx","chest","totalChestChance","ref","dungeon","totalMonsterChance","monsterChance","minMonsters","maxMonsters","chests","legend","datas","HiddenCoveMonsters","Card","ncpLocation","Leon","x","y","Elder","Yoregot","Durnik","Hermit","Necro","Odin","Polini","Zeng","Dafydd","Eski","Morin","Tyan","Wang","Alva","Meaty","King","Ken","Jungle","Mcarthur","Samil","Flow","Gasdan","Ponzar","Notch","Arwyn","Thicket","QuestRow","rdm","npc","summary","questItem","rewards","town","craftingData","material","Crafting","craft","mat","waterFind","Fishing","digFind","Digging","finds","Finding","tMaps","reward","gold","tMap","Activities","shops","towns","requirement","GearsShops","MagicShops","InnShops","Map","innerHeight","mapHeight","setMapHeight","addEventListener","height","overflow","border","aria-label","inner-text","aria-labelledby","App","exact","ReactDOM","render","getElementById"],"mappings":"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BACN9D,KAAM,IACN0F,KAAM,IACNmM,MAAO,CAAC,OAAQ,SAAU,WAAY,UAAW,UAAW,aAEhE,CACI/N,KAAM,gBACN9D,KAAM,IACN0F,KAAM,IACNmM,MAAO,CAAC,OAAQ,WAAY,UAAW,UAAW,aAEtD,CACI/N,KAAM,YACN9D,KAAM,GACN0F,KAAM,IACNmM,MAAO,CACH,OACA,SACA,WACA,UACA,UACA,WACA,UACA,QACA,SACA,QACA,WACA,MACA,OACA,YACA,SACA,YAGR,CACI/N,KAAM,YACN9D,KAAM,IACN0F,KAAM,IACNmM,MAAO,CACH,OACA,SACA,WACA,UACA,UACA,WACA,UACA,QACA,SACA,QACA,WACA,MACA,OACA,YACA,SACA,YAGR,CACI/N,KAAM,YACN9D,KAAM,IACN0F,KAAM,MACNmM,MAAO,CACH,OACA,SACA,WACA,UACA,UACA,WACA,UACA,QACA,SACA,QACA,WACA,MACA,OACA,YACA,SACA,YAGR,CACI/N,KAAM,gBACN9D,KAAM,GACN0F,KAAM,KACNmM,MAAO,CACH,OACA,SACA,WACA,UACA,UACA,WACA,UACA,QACA,SACA,QACA,WACA,MACA,OACA,YACA,WAGR,CACI/N,KAAM,oBACN9D,KAAM,IACN0F,KAAM,KACNmM,MAAO,CAAC,OAAQ,UAAW,YAE/B,CACI/N,KAAM,aACN9D,KAAM,IACN0F,KAAM,GACNmM,MAAO,CAAC,OAAQ,SAAU,YAE9B,CACI/N,KAAM,aACN9D,KAAM,IACN0F,KAAM,KACNoM,YAAa,eACbD,MAAO,CAAC,SAEZ,CACI/N,KAAM,kBACN9D,KAAM,IACN0F,KAAM,IACNoM,YAAa,UACbD,MAAO,CAAC,SAEZ,CACI/N,KAAM,eACN9D,KAAM,IACN0F,KAAM,MACNoM,YAAa,cACbD,MAAO,CAAC,SAEZ,CACI/N,KAAM,iBACN9D,KAAM,IACN0F,KAAM,KACNoM,YAAa,iBACbD,MAAO,CAAC,SAEZ,CACI/N,KAAM,cACN9D,KAAM,IACN0F,KAAM,OACNoM,YAAa,qBACbD,MAAO,CAAC,SAEZ,CACI/N,KAAM,kBACN9D,KAAM,GACN0F,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,WACA,UACA,QACA,SACA,QACA,WACA,MACA,OACA,YACA,WAGR,CACI/N,KAAM,cACN9D,KAAM,IACN0F,KAAM,IACNmM,MAAO,CACH,SACA,WACA,UACA,UACA,WACA,UACA,QACA,SACA,QACA,WACA,MACA,OACA,YACA,WAGR,CACI/N,KAAM,gBACN9D,KAAM,IACN0F,KAAM,IACNmM,MAAO,CACH,SACA,WACA,UACA,UACA,WACA,UACA,QACA,SACA,QACA,WACA,MACA,OACA,YACA,WAGR,CACI/N,KAAM,eACN9D,KAAM,GACN0F,KAAM,GACNmM,MAAO,CACH,OACA,SACA,WACA,UACA,UACA,WACA,UACA,QACA,SACA,QACA,WACA,MACA,OACA,YACA,WAGR,CACI/N,KAAM,cACN9D,KAAM,IACN0F,KAAM,IACNmM,MAAO,CACH,SACA,WACA,UACA,UACA,WACA,UACA,QACA,SACA,QACA,WACA,MACA,OACA,YACA,SACA,YAGR,CACI/N,KAAM,cACN9D,KAAM,IACN0F,KAAM,IACNmM,MAAO,CACH,SACA,WACA,UACA,UACA,WACA,UACA,QACA,SACA,QACA,WACA,MACA,OACA,YACA,SACA,YAGR,CACI/N,KAAM,cACN9D,KAAM,IACN0F,KAAM,IACNmM,MAAO,CACH,SACA,UACA,SACA,UACA,WACA,UACA,QACA,SACA,QACA,WACA,MACA,OACA,YACA,YAIG,SAASG,KACpB,OACI,cAACtR,EAAA,EAAD,CACIC,OAAQ,CAAC,OAAQ,OAAQ,QAAS,YAClCC,KAAMgR,GAAMhN,QAAO,SAACC,EAAKC,GACrB,MAAM,GAAN,mBACOD,GADP,CAEI,CACI7D,GAAI8D,EAAKhB,KAAKiB,MAAM,KAAKC,KAAK,KAC9B7D,KAAM,CACF,cAACpB,EAAA,EAAD,CAAQC,KAAM8E,EAAK9E,KAAMC,YAAY,QAAQY,UAAU,SAASoE,MAAOH,EAAKhB,KAAMoB,IAAKJ,EAAKhB,OAC5F,cAAC,IAAD,CAAMqB,GAAE,iBAAYL,EAAKhB,KAAKiB,MAAM,KAAKC,KAAK,MAA9C,SAAuDF,EAAKhB,OAC5DgB,EAAKY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","file":"static/js/main.bb36f7f7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function Sprite({ tile, spriteSheet, ...restProps }) {\r\n    function image(tile) {\r\n        const png = tile < 256 ? `${spriteSheet}.png` : `${spriteSheet}2.png`;\r\n        return {\r\n            background: `url(${process.env.PUBLIC_URL}/data/spriteSheet/${png}) 0 0 no-repeat`,\r\n            backgroundPosition: `-${(tile < 256 ? tile % 16 : (tile - 256) % 16) * 32}px -${\r\n                tile < 256 ? ~~(tile / 16) * 32 : ~~((tile - 256) / 16) * 32\r\n            }px`,\r\n            margin: '0 auto 3px auto',\r\n        };\r\n    }\r\n\r\n    return <div style={image(tile)} {...restProps}></div>;\r\n}\r\n","import React from 'react';\r\n\r\nimport './styles.css';\r\n\r\nexport default function Table({ header, rows, ...restProps }) {\r\n    return (\r\n        <table {...restProps} className='table'>\r\n            <thead>\r\n                <tr>\r\n                    {header.map((head, id) => (\r\n                        <th key={id}>{typeof head === 'string' ? head.toUpperCase() : head}</th>\r\n                    ))}\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {rows.map((row, id) => (\r\n                    <tr key={id} id={row.id} className='anchor-Zone'>\r\n                        {row.data.map((data, id) => (\r\n                            <td key={id}>{data}</td>\r\n                        ))}\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nimport './styles.css';\r\n\r\nexport default function H3({ children, ...restProps }) {\r\n    const [isExpanded, setIsExpanded] = useState(true);\r\n\r\n    function expandCollapse({ target }) {\r\n        const content = target.parentNode.nextSibling;\r\n        if (isExpanded) {\r\n            content.style.display = 'none';\r\n        } else {\r\n            content.style.display = 'block';\r\n        }\r\n        setIsExpanded(!isExpanded);\r\n    }\r\n\r\n    return (\r\n        <h3 className='header-3' {...restProps}>\r\n            {children}{' '}\r\n            <button className='expandCollapse' onClick={expandCollapse}>\r\n                {isExpanded ? '[collapse]' : '[expand]'}\r\n            </button>\r\n        </h3>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nimport './styles.css';\r\n\r\nexport default function H2({ children, ...restProps }) {\r\n    return (\r\n        <h2 className='header-2' {...restProps}>\r\n            {children}\r\n        </h2>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nimport './styles.css';\r\n\r\nexport default function PageHeader({ children, tablaOfContent = false, ...restProps }) {\r\n    return (\r\n        <header className='pageHeader' {...restProps}>\r\n            <div className='headerContent'>{children}</div>\r\n            {tablaOfContent ? (\r\n                <div className='quickLinks'>\r\n                    <p>Content</p>\r\n\r\n                    {tablaOfContent.length > 17 ? (\r\n                        <>\r\n                            <ol>\r\n                                {tablaOfContent.splice(0, 18).map((link, id) => (\r\n                                    <li key={id}>\r\n                                        <span className='number'>{id + 1}.</span> {link}\r\n                                    </li>\r\n                                ))}\r\n                            </ol>\r\n                            <ol>\r\n                                {tablaOfContent.splice(0).map((link, id) => (\r\n                                    <li key={id}>\r\n                                        <span className='number'>{id + 19}.</span> {link}\r\n                                    </li>\r\n                                ))}\r\n                            </ol>\r\n                        </>\r\n                    ) : (\r\n                        <ol>\r\n                            {tablaOfContent.map((link, id) => (\r\n                                <li key={id}>\r\n                                    <span className='number'>{id + 1}.</span> {link}\r\n                                </li>\r\n                            ))}\r\n                        </ol>\r\n                    )}\r\n                </div>\r\n            ) : null}\r\n        </header>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\n// import ItemsFilters from '../utils/ItemsFilters';\r\nimport levelFilter from '../utils/levelFilter';\r\nconst DataContext = React.createContext();\r\n\r\nfunction DataContextProvider({ children }) {\r\n    const [equipments, setEquipments] = useState(null);\r\n    const [items, setItems] = useState(null);\r\n    const [levels, setLevels] = useState(null);\r\n    const [monsters, setMonsters] = useState(null);\r\n    const [quests, setQuests] = useState(null);\r\n    const [skillsSpell, setSkillsSpell] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetch(process.env.PUBLIC_URL + '/data/gameData/equipments.json')\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                setEquipments(data);\r\n            });\r\n\r\n        fetch(process.env.PUBLIC_URL + '/data/gameData/items.json')\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                setItems(data);\r\n            });\r\n\r\n        fetch(process.env.PUBLIC_URL + '/data/gameData/levels.json')\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                const sortedLevels = {};\r\n                levelFilter.forEach((filter) => {\r\n                    sortedLevels[filter.name] = data.levels.level.filter((_, id) => filter.floors.includes(id));\r\n                    if (filter.name === 'Tower Courtyard') {\r\n                        sortedLevels[filter.name] = sortedLevels[filter.name].reverse();\r\n                    }\r\n                });\r\n                setLevels(sortedLevels);\r\n            });\r\n\r\n        fetch(process.env.PUBLIC_URL + '/data/gameData/monsters.json')\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                setMonsters(data);\r\n            });\r\n\r\n        fetch(process.env.PUBLIC_URL + '/data/gameData/quests.json')\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                setQuests(data);\r\n            });\r\n\r\n        fetch(process.env.PUBLIC_URL + '/data/gameData/skillsSpell.json')\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                setSkillsSpell(data);\r\n            });\r\n    }, []);\r\n\r\n    return (\r\n        <DataContext.Provider value={{ equipments, items, levels, monsters, quests, skillsSpell }}>\r\n            {equipments && items && levels && monsters && quests && skillsSpell ? children : null}\r\n        </DataContext.Provider>\r\n    );\r\n}\r\n\r\nexport { DataContextProvider, DataContext };\r\n\r\n// // PRE SORT PURPOSE\r\n// if (items && monsters && levels) {\r\n//     console.log(editItems(items, monsters, levels));\r\n//     console.log(JSON.stringify(editItems(items, monsters, levels), ' ', 4));\r\n// }\r\n\r\n// if (monsters && levels) {\r\n//     console.log(editMonsters(monsters, levels));\r\n//     console.log(JSON.stringify(editMonsters(monsters, levels), ' ', 4));\r\n// }\r\n\r\n// function Obj2Arr(item) {\r\n//     return !Array.isArray(item) && item ? [item] : item;\r\n// }\r\n\r\n// function editMonsters(monsters, levels) {\r\n//     let tmpMonsters;\r\n\r\n//     tmpMonsters = monsters.map((monster) => {\r\n//         const foundIn = [];\r\n//         DungeonsFilters.forEach((filter) => {\r\n//             const tempFoundIn = levels[filter.name].reduce((acc, level, idx) => {\r\n//                 if (level.monsterChance) {\r\n//                     level.monsterChance = Obj2Arr(level.monsterChance);\r\n\r\n//                     if (level.legend && level.legend === monster.name) {\r\n//                         acc.push(`${filter.name} F${idx + 1}`);\r\n//                     }\r\n\r\n//                     level.monsterChance.forEach((levelMonster) => {\r\n//                         if (levelMonster.type && levelMonster.type === monster.name) {\r\n//                             acc.push(`${filter.name} F${idx + 1}`);\r\n//                         }\r\n//                     });\r\n//                 }\r\n//                 return acc;\r\n//             }, []);\r\n\r\n//             if (tempFoundIn.length) {\r\n//                 foundIn.push(...tempFoundIn);\r\n//             }\r\n//         });\r\n\r\n//         return { ...monster, foundIn };\r\n//     });\r\n\r\n//     return tmpMonsters;\r\n// }\r\n\r\n// function editItems(items, monsters, levels) {\r\n//     let tmpItems;\r\n//     //Adding DropedBy\r\n//     tmpItems = items.map((item) => {\r\n//         const itemDropsOn = monsters.reduce((acc, monster) => {\r\n//             monster.item = Obj2Arr(monster.item);\r\n//             monster.itemChance = Obj2Arr(monster.itemChance);\r\n\r\n//             if (monster.item) {\r\n//                 monster.item.forEach((monster_item) => {\r\n//                     if (monster_item.name === item.name) {\r\n//                         acc.push({ name: monster.name, chance: monster_item.onein ? '1/' + monster_item.onein : '100/100' });\r\n//                     }\r\n//                 });\r\n//             }\r\n\r\n//             if (monster.itemChance) {\r\n//                 const maxChance = monster.itemChance.reduce((acc, cur) => acc + ~~cur.chance, 0);\r\n//                 monster.itemChance.forEach((monster_item) => {\r\n//                     if (monster_item.name === item.name) {\r\n//                         if (item.name === 'Gold') {\r\n//                             acc.push({\r\n//                                 name: monster.name,\r\n//                                 chance: `${monster_item.chance}/${maxChance}`,\r\n//                                 min: monster_item.min,\r\n//                                 max: monster_item.max,\r\n//                             });\r\n//                         } else {\r\n//                             acc.push({ name: monster.name, chance: `${monster_item.chance}/${maxChance}` });\r\n//                         }\r\n//                     }\r\n//                 });\r\n//             }\r\n\r\n//             return acc;\r\n//         }, []);\r\n\r\n//         return { ...item, dropedBy: itemDropsOn };\r\n//     });\r\n\r\n//     //Adding FoundIn\r\n//     tmpItems = tmpItems.map((item) => {\r\n//         const itemFoundIn = [];\r\n//         DungeonsFilters.forEach((filter) => {\r\n//             const foundIn = levels[filter.name].reduce((acc, level, idx) => {\r\n//                 if (level.chest) {\r\n//                     level.chest.itemChance = Obj2Arr(level.chest.itemChance);\r\n//                     const maxChance = level.chest.itemChance.reduce((acc, cur) => acc + ~~cur.chance, 0);\r\n\r\n//                     level.chest.itemChance.forEach((chest_item) => {\r\n//                         if (chest_item.name === item.name) {\r\n//                             if (item.name === 'Gold') {\r\n//                                 acc.push({\r\n//                                     name: level.id,\r\n//                                     chance: `${chest_item.chance}/${maxChance}`,\r\n//                                     min: chest_item.min,\r\n//                                     max: chest_item.max,\r\n//                                 });\r\n//                             } else {\r\n//                                 acc.push({ name: `${filter.name} F${idx + 1}`, chance: `${chest_item.chance}/${maxChance}` });\r\n//                             }\r\n//                         }\r\n//                     });\r\n//                 }\r\n\r\n//                 return acc;\r\n//             }, []);\r\n\r\n//             if (foundIn.length) {\r\n//                 itemFoundIn.push(...foundIn);\r\n//             }\r\n//         });\r\n\r\n//         return { ...item, foundIn: itemFoundIn };\r\n//     });\r\n\r\n//     //Filter them\r\n//     const sortedItems = {};\r\n//     ItemsFilters.forEach((filter) => {\r\n//         sortedItems[filter.name] = tmpItems.filter((item) => filter.ids.includes(~~item.id));\r\n//     });\r\n\r\n//     return sortedItems;\r\n// }\r\n","// prettier-ignore\r\nconst levelFilter = [\r\n    {\r\n        codeName: \"Aria-Dungeons\",\r\n        name: \"Aria Town\",\r\n        floors: [0, 1, 2, 3, 4, 5, 6],\r\n    },\r\n    {\r\n        codeName: \"Aria-Crypt\",\r\n        name: \"Graveyard\",\r\n        floors: [7, 8, 9],\r\n    },\r\n    {\r\n        codeName: \"Farm-base\",\r\n        name: \"Caws Mawr\",\r\n        floors: [75, 76, 77, 78, 79, 80],\r\n    },\r\n    {\r\n        codeName: \"Wild-Dungeons\",\r\n        name: \"Wilderness\",\r\n        floors: [15, 16, 17, 18, 19],\r\n    },\r\n    {\r\n        codeName: \"Vly-Dungeons\",\r\n        name: \"Valley\",\r\n        floors: [30, 31, 32, 33, 34],\r\n    },\r\n    {\r\n        codeName: \"Sthel-Dungeons\",\r\n        name: \"S'Thel Oasis\",\r\n        floors: [20, 21, 22, 23, 24, 25, 26, 27, 28, 29],\r\n    },\r\n    {\r\n        codeName: \"Shrine-base\",\r\n        name: \"Shrine\",\r\n        floors: [106, 107, 108, 109, 110, 111, 112, 113],\r\n    },\r\n    {\r\n        codeName: \"Mnt-Dungeons\",\r\n        name: \"Mountains\",\r\n        floors: [10, 11, 12, 13, 14],\r\n    },\r\n    {\r\n        codeName: \"Drt-Dungeons\",\r\n        name: \"Cyclops Valley\",\r\n        floors: [35, 36, 37, 38, 39, 40, 41, 42],\r\n    },\r\n    {\r\n        codeName: \"Heim-Dungeons\",\r\n        name: \"Dondheim City\",\r\n        floors: [43, 44, 45, 46, 47, 48],\r\n    },\r\n    {\r\n        codeName: \"Komb-Tower\",\r\n        name: \"Tower Courtyard\",\r\n        floors: [49, 50, 51, 52, 53],\r\n    },\r\n    {\r\n        codeName: \"Nord-Dungeons\",\r\n        name: \"Nordolk Settlement\",\r\n        floors: [61, 62, 63, 64, 65, 66],\r\n    },\r\n    {\r\n        codeName: \"Forest-Dungeons\",\r\n        name: \"Hidden Forest\",\r\n        floors: [54, 55, 56, 57, 58, 59, 60],\r\n    },\r\n    {\r\n        codeName: \"Gomb-base\",\r\n        name: \"Gombard Town\",\r\n        floors: [103, 104, 105],\r\n    },\r\n    {\r\n        codeName: \"Bad-Dungeons\",\r\n        name: \"Badlands Gate\",\r\n        floors: [67, 68, 69, 70, 71, 72, 73, 74],\r\n    },\r\n    {\r\n        codeName: \"Jungle-Dungeons\",\r\n        name: \"Outback\",\r\n        floors: [87, 88, 89, 90, 91, 92, 93, 94],\r\n    },\r\n    {\r\n        codeName: \"Vale-dung\",\r\n        name: \"The Vale\",\r\n        floors: [81, 82, 83, 84, 85, 86],\r\n    },\r\n    {\r\n        codeName: \"Frozen-base\",\r\n        name: \"Frozen Wastes\",\r\n        floors: [95, 96, 97, 98, 99, 100, 101, 102],\r\n    },\r\n    {\r\n        codeName: \"Cennyn-base\",\r\n        name: \"Cennyn City\",\r\n        floors: [114, 115, 116, 117, 118, 119, 120],\r\n    },\r\n    {\r\n        codeName: \"chidden1\",\r\n        name: \"Cennyn City Hidden 1\",\r\n        floors: [121, 122, 123],\r\n    },\r\n    {\r\n        codeName: \"chidden2\",\r\n        name: \"Cennyn City Hidden 2\",\r\n        floors: [124, 125, 126],\r\n    },\r\n    {\r\n        codeName: \"Plains-Base\",\r\n        name: \"Milain Plains\",\r\n        floors: [127, 128, 129, 130, 131],\r\n    },\r\n    {\r\n        codeName: \"Peaks-Base\",\r\n        name: \"The Mighty Peaks\",\r\n        floors: [132, 133, 134, 135, 136, 137],\r\n    },\r\n    {\r\n        codeName: \"TalMita-Base\",\r\n        name: \"Tal Mita Settlement\",\r\n        floors: [151, 152, 153, 154, 155, 156, 157, 158, 159, 160],\r\n    },\r\n    {\r\n        codeName: \"Kor-Base\",\r\n        name: \"Kor\",\r\n        floors: [146, 147, 148, 149, 150],\r\n    },\r\n    {\r\n        codeName: \"Naleg-Base\",\r\n        name: \"Naleg\",\r\n        floors: [138, 139, 140, 141, 142],\r\n    },\r\n    {\r\n        codeName: \"nhidden1\",\r\n        name: \"Naleg Hidden 1\",\r\n        floors: [143, 144, 145],\r\n    },\r\n    {\r\n        codeName: \"Ynys-Base\",\r\n        name: \"Port Ynys\",\r\n        floors: [161, 162, 163, 164, 165],\r\n    },\r\n    {\r\n        codeName: \"Airlon-Base\",\r\n        name: \"Airlon Settlement\",\r\n        floors: [172, 173, 174, 175, 176],\r\n    },\r\n    {\r\n        codeName: \"Nivek-Base\",\r\n        name: \"Tal Nivek\",\r\n        floors: [166, 167, 168, 169, 170, 171],\r\n    },\r\n    {\r\n        codeName: \"Thicket-Base\",\r\n        name: \"Thicket\",\r\n        floors: [177, 178, 179, 180, 181],\r\n    },\r\n    {\r\n        codeName: \"Island-Base\",\r\n        name: \"The Island\",\r\n        floors: [182, 183, 184, 185, 186, 187, 188],\r\n    },\r\n    {\r\n        codeName: \"End-Base\",\r\n        name: \"Gates of Hell\",\r\n        floors: [189, 190, 191, 192, 193, 194, 195, 196, 197, 198],\r\n    },\r\n];\r\n\r\nexport default levelFilter;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Sprite from '../Sprite';\r\n\r\nexport default function NonGearRow(items, type) {\r\n    return items\r\n        .sort((a, b) => ~~a.level - ~~b.level)\r\n        .reduce((acc, item) => {\r\n            return [\r\n                ...acc,\r\n                {\r\n                    id: item.name.split(' ').join('_'),\r\n                    data:\r\n                        type === 'quest-item'\r\n                            ? [\r\n                                  <Sprite tile={item.tile} spriteSheet='tiles' className='sprite' title={item.name} alt={item.name} />,\r\n                                  <Link to={`/items#${item.name.split(' ').join('_')}`}>{item.name}</Link>,\r\n                              ]\r\n                            : type === 'consumable'\r\n                            ? [\r\n                                  <Sprite tile={item.tile} spriteSheet='tiles' className='sprite' title={item.name} alt={item.name} />,\r\n                                  <Link to={`/items#${item.name.split(' ').join('_')}`}>{item.name}</Link>,\r\n                                  item.action ? (\r\n                                      Array.isArray(item.action) ? (\r\n                                          <div className='maxScroll'>\r\n                                              <ul>\r\n                                                  {item.action.map((action, id) => (\r\n                                                      <li key={id}>\r\n                                                          +{action.delta} {action.attribute}\r\n                                                      </li>\r\n                                                  ))}\r\n                                              </ul>\r\n                                          </div>\r\n                                      ) : (\r\n                                          `+${item.action.delta} ${item.action.attribute}`\r\n                                      )\r\n                                  ) : (\r\n                                      item.desc\r\n                                  ),\r\n                                  ~~(item.cost * 0.05) + 1,\r\n                                  item.dropedBy.length ? (\r\n                                      <div className='maxScroll'>\r\n                                          <ul>\r\n                                              {item.dropedBy.map((dropedBy) => {\r\n                                                  return (\r\n                                                      <li key={dropedBy.name}>\r\n                                                          <Link to={`/monsters#${dropedBy.name.split(' ').join('_')}`}>{dropedBy.name}</Link>{' '}\r\n                                                          {`${dropedBy.chance === '100/100' ? '' : ``} ${(\r\n                                                              (~~dropedBy.chance.split('/')[0] / ~~dropedBy.chance.split('/')[1]) *\r\n                                                              100\r\n                                                          )\r\n                                                              .toFixed(2)\r\n                                                              .replace(/\\.0+$/, '')}%`}\r\n                                                      </li>\r\n                                                  );\r\n                                              })}\r\n                                          </ul>\r\n                                      </div>\r\n                                  ) : (\r\n                                      '–'\r\n                                  ),\r\n                                  item.foundIn.length ? (\r\n                                      <div className='maxScroll'>\r\n                                          <ul>\r\n                                              {item.foundIn.map((foundIn, id) => {\r\n                                                  if (foundIn === 'Shops') {\r\n                                                      return (\r\n                                                          <li key={id}>\r\n                                                              <Link to={`/shops#${item.name.split(' ').join('_').replace(\"'\", '_')}`}>Shops</Link>\r\n                                                          </li>\r\n                                                      );\r\n                                                  } else if (foundIn === 'Treasure Map') {\r\n                                                      return (\r\n                                                          <li key={id}>\r\n                                                              <Link to={`/activities#treasure_maps`}>Treasure Map</Link>\r\n                                                          </li>\r\n                                                      );\r\n                                                  } else if (foundIn === 'Crafting') {\r\n                                                      return (\r\n                                                          <li key={id}>\r\n                                                              <Link to={`/activities#crafting`}>Crafting</Link>\r\n                                                          </li>\r\n                                                      );\r\n                                                  } else if (foundIn === 'Finding') {\r\n                                                      return (\r\n                                                          <li key={id}>\r\n                                                              <Link to={`/activities#finding`}>Finding</Link>\r\n                                                          </li>\r\n                                                      );\r\n                                                  } else if (foundIn === 'Fishing') {\r\n                                                      return (\r\n                                                          <li key={id}>\r\n                                                              <Link to={`/activities#fishing`}>Fishing</Link>\r\n                                                          </li>\r\n                                                      );\r\n                                                  } else if (foundIn === 'Digging') {\r\n                                                      return (\r\n                                                          <li key={id}>\r\n                                                              <Link to={`/activities#digging`}>Digging</Link>\r\n                                                          </li>\r\n                                                      );\r\n                                                  } else if (foundIn.name) {\r\n                                                      return (\r\n                                                          <li key={id}>\r\n                                                              <Link\r\n                                                                  to={`/dungeons#${foundIn.name.split(' ').slice(0, -1).join('_').replace(\"'\", '_')}`}\r\n                                                              >\r\n                                                                  {foundIn.name}\r\n                                                              </Link>{' '}\r\n                                                              {`${foundIn.chance === '100/100' ? '' : ``} ${(\r\n                                                                  (~~foundIn.chance.split('/')[0] / ~~foundIn.chance.split('/')[1]) *\r\n                                                                  100\r\n                                                              )\r\n                                                                  .toFixed(2)\r\n                                                                  .replace(/\\.0+$/, '')}%`}\r\n                                                          </li>\r\n                                                      );\r\n                                                  } else {\r\n                                                      return (\r\n                                                          <li key={id}>\r\n                                                              Quest{' '}\r\n                                                              <Link to={`/quests#${foundIn.quest.split(' ').join('_').replace(\"'\", '_')}`}>\r\n                                                                  {foundIn.quest}\r\n                                                              </Link>\r\n                                                          </li>\r\n                                                      );\r\n                                                  }\r\n                                              })}\r\n                                          </ul>\r\n                                      </div>\r\n                                  ) : (\r\n                                      '–'\r\n                                  ),\r\n                              ]\r\n                            : type === 'spell'\r\n                            ? [\r\n                                  <Sprite tile={item.tile} spriteSheet='tiles' className='sprite' title={item.name} alt={item.name} />,\r\n                                  <Link to={`/items#${item.name.split(' ').join('_')}`}>{item.name}</Link>,\r\n                                  item.level,\r\n                                  item.action ? (\r\n                                      Array.isArray(item.action) ? (\r\n                                          <div className='maxScroll'>\r\n                                              <ul>\r\n                                                  {item.action.map((action, id) => (\r\n                                                      <li key={id}>\r\n                                                          +{action.delta} {action.attribute}\r\n                                                      </li>\r\n                                                  ))}\r\n                                              </ul>\r\n                                          </div>\r\n                                      ) : (\r\n                                          `+${item.action.delta} ${item.action.attribute}`\r\n                                      )\r\n                                  ) : (\r\n                                      item.desc\r\n                                  ),\r\n                                  ~~(item.cost * 0.05) + 1,\r\n                                  item.dropedBy.length ? (\r\n                                      <div className='maxScroll'>\r\n                                          <ul>\r\n                                              {item.dropedBy.map((dropedBy) => {\r\n                                                  return (\r\n                                                      <li key={dropedBy.name}>\r\n                                                          <Link to={`/monsters#${dropedBy.name.split(' ').join('_')}`}>{dropedBy.name}</Link>{' '}\r\n                                                          {`${dropedBy.chance === '100/100' ? '' : ``} ${(\r\n                                                              (~~dropedBy.chance.split('/')[0] / ~~dropedBy.chance.split('/')[1]) *\r\n                                                              100\r\n                                                          )\r\n                                                              .toFixed(2)\r\n                                                              .replace(/\\.0+$/, '')}%`}\r\n                                                      </li>\r\n                                                  );\r\n                                              })}\r\n                                          </ul>\r\n                                      </div>\r\n                                  ) : (\r\n                                      '–'\r\n                                  ),\r\n                                  item.foundIn.length ? (\r\n                                      <div className='maxScroll'>\r\n                                          <ul>\r\n                                              {item.foundIn.map((foundIn, id) => {\r\n                                                  if (foundIn === 'Shops') {\r\n                                                      return (\r\n                                                          <li key={id}>\r\n                                                              <Link to={`/shops#${item.name.split(' ').join('_').replace(\"'\", '_')}`}>Shops</Link>\r\n                                                          </li>\r\n                                                      );\r\n                                                  } else if (foundIn === 'Treasure Map') {\r\n                                                      return (\r\n                                                          <li key={id}>\r\n                                                              <Link to={`/activities#treasure_maps`}>Treasure Map</Link>\r\n                                                          </li>\r\n                                                      );\r\n                                                  } else if (foundIn === 'Crafting') {\r\n                                                      return (\r\n                                                          <li key={id}>\r\n                                                              <Link to={`/activities#crafting`}>Crafting</Link>\r\n                                                          </li>\r\n                                                      );\r\n                                                  } else if (foundIn === 'Finding') {\r\n                                                      return (\r\n                                                          <li key={id}>\r\n                                                              <Link to={`/activities#finding`}>Finding</Link>\r\n                                                          </li>\r\n                                                      );\r\n                                                  } else if (foundIn === 'Fishing') {\r\n                                                      return (\r\n                                                          <li key={id}>\r\n                                                              <Link to={`/activities#fishing`}>Fishing</Link>\r\n                                                          </li>\r\n                                                      );\r\n                                                  } else if (foundIn === 'Digging') {\r\n                                                      return (\r\n                                                          <li key={id}>\r\n                                                              <Link to={`/activities#digging`}>Digging</Link>\r\n                                                          </li>\r\n                                                      );\r\n                                                  } else if (foundIn.name) {\r\n                                                      return (\r\n                                                          <li key={id}>\r\n                                                              <Link\r\n                                                                  to={`/dungeons#${foundIn.name.split(' ').slice(0, -1).join('_').replace(\"'\", '_')}`}\r\n                                                              >\r\n                                                                  {foundIn.name}\r\n                                                              </Link>{' '}\r\n                                                              {`${foundIn.chance === '100/100' ? '' : ``} ${(\r\n                                                                  (~~foundIn.chance.split('/')[0] / ~~foundIn.chance.split('/')[1]) *\r\n                                                                  100\r\n                                                              )\r\n                                                                  .toFixed(2)\r\n                                                                  .replace(/\\.0+$/, '')}%`}\r\n                                                          </li>\r\n                                                      );\r\n                                                  } else {\r\n                                                      return (\r\n                                                          <li key={id}>\r\n                                                              Quest{' '}\r\n                                                              <Link to={`/quests#${foundIn.quest.split(' ').join('_').replace(\"'\", '_')}`}>\r\n                                                                  {foundIn.quest}\r\n                                                              </Link>\r\n                                                          </li>\r\n                                                      );\r\n                                                  }\r\n                                              })}\r\n                                          </ul>\r\n                                      </div>\r\n                                  ) : (\r\n                                      '–'\r\n                                  ),\r\n                              ]\r\n                            : [\r\n                                  <Sprite tile={item.tile} spriteSheet='tiles' className='sprite' title={item.name} alt={item.name} />,\r\n                                  <Link to={`/items#${item.name.split(' ').join('_')}`}>{item.name}</Link>,\r\n                                  ~~(item.cost * 0.05) + 1,\r\n                                  item.dropedBy.length ? (\r\n                                      <div className='maxScroll'>\r\n                                          <ul>\r\n                                              {item.dropedBy.map((dropedBy) => {\r\n                                                  return (\r\n                                                      <li key={dropedBy.name}>\r\n                                                          <Link to={`/monsters#${dropedBy.name.split(' ').join('_')}`}>{dropedBy.name}</Link>{' '}\r\n                                                          {`${dropedBy.chance === '100/100' ? '' : ``} ${(\r\n                                                              (~~dropedBy.chance.split('/')[0] / ~~dropedBy.chance.split('/')[1]) *\r\n                                                              100\r\n                                                          )\r\n                                                              .toFixed(2)\r\n                                                              .replace(/\\.0+$/, '')}%`}\r\n                                                      </li>\r\n                                                  );\r\n                                              })}\r\n                                          </ul>\r\n                                      </div>\r\n                                  ) : (\r\n                                      '–'\r\n                                  ),\r\n                                  item.foundIn.length ? (\r\n                                      <div className='maxScroll'>\r\n                                          <ul>\r\n                                              {item.foundIn.map((foundIn, id) => {\r\n                                                  if (foundIn === 'Shops') {\r\n                                                      return (\r\n                                                          <li key={id}>\r\n                                                              <Link to={`/shops#${item.name.split(' ').join('_').replace(\"'\", '_')}`}>Shops</Link>\r\n                                                          </li>\r\n                                                      );\r\n                                                  } else if (foundIn === 'Treasure Map') {\r\n                                                      return (\r\n                                                          <li key={id}>\r\n                                                              <Link to={`/activities#treasure_maps`}>Treasure Map</Link>\r\n                                                          </li>\r\n                                                      );\r\n                                                  } else if (foundIn === 'Crafting') {\r\n                                                      return (\r\n                                                          <li key={id}>\r\n                                                              <Link to={`/activities#crafting`}>Crafting</Link>\r\n                                                          </li>\r\n                                                      );\r\n                                                  } else if (foundIn === 'Finding') {\r\n                                                      return (\r\n                                                          <li key={id}>\r\n                                                              <Link to={`/activities#finding`}>Finding</Link>\r\n                                                          </li>\r\n                                                      );\r\n                                                  } else if (foundIn === 'Fishing') {\r\n                                                      return (\r\n                                                          <li key={id}>\r\n                                                              <Link to={`/activities#fishing`}>Fishing</Link>\r\n                                                          </li>\r\n                                                      );\r\n                                                  } else if (foundIn === 'Digging') {\r\n                                                      return (\r\n                                                          <li key={id}>\r\n                                                              <Link to={`/activities#digging`}>Digging</Link>\r\n                                                          </li>\r\n                                                      );\r\n                                                  } else if (foundIn.name) {\r\n                                                      return (\r\n                                                          <li key={id}>\r\n                                                              <Link\r\n                                                                  to={`/dungeons#${foundIn.name.split(' ').slice(0, -1).join('_').replace(\"'\", '_')}`}\r\n                                                              >\r\n                                                                  {foundIn.name}\r\n                                                              </Link>{' '}\r\n                                                              {`${foundIn.chance === '100/100' ? '' : ``} ${(\r\n                                                                  (~~foundIn.chance.split('/')[0] / ~~foundIn.chance.split('/')[1]) *\r\n                                                                  100\r\n                                                              )\r\n                                                                  .toFixed(2)\r\n                                                                  .replace(/\\.0+$/, '')}%`}\r\n                                                          </li>\r\n                                                      );\r\n                                                  } else {\r\n                                                      return (\r\n                                                          <li key={id}>\r\n                                                              Quest{' '}\r\n                                                              <Link to={`/quests#${foundIn.quest.split(' ').join('_').replace(\"'\", '_')}`}>\r\n                                                                  {foundIn.quest}\r\n                                                              </Link>\r\n                                                          </li>\r\n                                                      );\r\n                                                  }\r\n                                              })}\r\n                                          </ul>\r\n                                      </div>\r\n                                  ) : (\r\n                                      '–'\r\n                                  ),\r\n                              ],\r\n                },\r\n            ];\r\n        }, []);\r\n}\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\nimport H2 from '../components/H2';\r\nimport H3 from '../components/H3';\r\nimport PageHeader from '../components/PageHeader';\r\nimport Table from '../components/Table';\r\nimport GearRow from '../components/Table/GearRow';\r\nimport NonGearRow from '../components/Table/NonGearRow';\r\n\r\nimport { DataContext } from '../context/dataContext';\r\n\r\nconst setsBonus = [\r\n    {\r\n        name: 'Bandit set',\r\n        bonus: '3% exp',\r\n        items: ['Bandana', 'Bandit Armor', 'Bandit Shiv'],\r\n    },\r\n    {\r\n        name: 'Crusader set',\r\n        bonus: '6% exp',\r\n        items: [\r\n            'Crusader Helm',\r\n            'Crusader Armor',\r\n            'Crusader Gloves',\r\n            'Crusader Sword',\r\n            'Crusader Shield',\r\n        ],\r\n    },\r\n    {\r\n        name: 'Ninja set',\r\n        bonus: '8% exp',\r\n        items: ['Bandit Hood', 'Ninja Gi', 'Tabi Boots', 'Nunchuks'],\r\n    },\r\n    {\r\n        name: 'Zombie set',\r\n        bonus: '12% exp',\r\n        items: ['Zombie Scalp', 'Zombie Disguise', 'Zombie Gloves'],\r\n    },\r\n    {\r\n        name: 'Viking set',\r\n        bonus: '10% gold',\r\n        items: ['Viking Helm', 'Viking Armor', 'Viking Axe'],\r\n    },\r\n    {\r\n        name: 'Merlin set',\r\n        bonus: '2 charge / turn',\r\n        items: ['Merlins Cap', 'Merlins Cloak', 'Merlins Wand'],\r\n    },\r\n    {\r\n        name: 'Magic set',\r\n        bonus: '4 charge / turn',\r\n        items: [\r\n            'Wizard Hat',\r\n            'Magicians Robes',\r\n            'Pointy Boots',\r\n            'Warlock Staff',\r\n            'Ring of Tra',\r\n        ],\r\n    },\r\n    {\r\n        name: 'Witch doctor set',\r\n        bonus: '5 magic',\r\n        items: [\r\n            'Tribal Mask',\r\n            'Grass Skirt',\r\n            'Pygmy Staff',\r\n            'Amulet of the Sun',\r\n            'Bone Ring',\r\n        ],\r\n    },\r\n    {\r\n        name: 'Spectral set',\r\n        bonus: '10 magic',\r\n        items: [\r\n            'Spectral Hood',\r\n            'Spectral Boots',\r\n            'Spectral Blade',\r\n            'Spectral Shield',\r\n            'Spectral Cloak',\r\n            'Spectral Ring',\r\n        ],\r\n    },\r\n    {\r\n        name: 'Elven set',\r\n        bonus: '2 zen / turn',\r\n        items: [\r\n            'Elven Coif',\r\n            'Elven Chainmail',\r\n            'Elven Boots',\r\n            'Elven Bow',\r\n            'Elven Cloak',\r\n        ],\r\n    },\r\n    {\r\n        name: 'Jester set',\r\n        bonus: '8 zen / turn',\r\n        items: [\r\n            'Jester Hat',\r\n            'Jester Robes',\r\n            'Jingly Gloves',\r\n            'Curly Clogs',\r\n            'Jesters Shaker',\r\n            'Juggling Balls',\r\n        ],\r\n    },\r\n    {\r\n        name: 'Shaman set',\r\n        bonus: '12 zen / turn',\r\n        items: ['Deer Antlers', 'Furs', 'Crooked Staff', 'Tooth Pendant'],\r\n    },\r\n    {\r\n        name: 'Pirate set',\r\n        bonus: '12 rage / turn',\r\n        items: [\r\n            'Pirate Hat',\r\n            'Eye Patch',\r\n            'Pirate Hook',\r\n            'Pirate Boots',\r\n            'Cutlass',\r\n        ],\r\n    },\r\n    {\r\n        name: 'Death set',\r\n        bonus: 'poison',\r\n        items: [\r\n            'Skull Mask',\r\n            'Black Robes',\r\n            'Bone Gloves',\r\n            'Scythe',\r\n            'Blood Ring',\r\n        ],\r\n    },\r\n];\r\n\r\nexport default function Items() {\r\n    const {\r\n        equipments,\r\n        items,\r\n        skillsSpell: { spell },\r\n    } = useContext(DataContext);\r\n    const hash = useLocation().hash;\r\n\r\n    useEffect(() => {\r\n        if (hash && document.querySelector(hash)) {\r\n            document.querySelector(hash).scrollIntoView();\r\n        } else {\r\n            window.scrollTo(0, 0);\r\n        }\r\n    });\r\n\r\n    return (\r\n        <main className='content'>\r\n            <H2>Gears</H2>\r\n            <PageHeader\r\n                tablaOfContent={[\r\n                    ...Object.keys(equipments).reduce((acc, type) => {\r\n                        return [\r\n                            ...acc,\r\n                            <a href={`${global.githubUrl}/items#${type}`}>\r\n                                {type.substring(0, 1).toUpperCase() +\r\n                                    type.substring(1)}\r\n                            </a>,\r\n                        ];\r\n                    }, []),\r\n                    <a href={`${global.githubUrl}/items#Spells`}>Spells</a>,\r\n                    <a href={`${global.githubUrl}/items#Sets`}>Sets</a>,\r\n                    ...Object.keys(items).reduce((acc, type) => {\r\n                        return [\r\n                            ...acc,\r\n                            <a\r\n                                href={`${global.githubUrl}/items#${type\r\n                                    .split(' ')\r\n                                    .join('_')}`}\r\n                            >\r\n                                {type.substring(0, 1).toUpperCase() +\r\n                                    type.substring(1)}\r\n                            </a>,\r\n                        ];\r\n                    }, []),\r\n                ]}\r\n            >\r\n                <p>\r\n                    Here is the list of all the gears of the game. The value is\r\n                    the sell value\r\n                </p>\r\n            </PageHeader>\r\n            {Object.keys(equipments).map((type, id) => {\r\n                return (\r\n                    <section key={id} id={type} className='anchor-Zone'>\r\n                        <H3>\r\n                            {type.substring(0, 1).toUpperCase() +\r\n                                type.substring(1)}\r\n                        </H3>\r\n                        <div>\r\n                            <Table\r\n                                header={[\r\n                                    'Icon',\r\n                                    'Name',\r\n                                    'Level',\r\n                                    'Class',\r\n                                    'Atk',\r\n                                    'Def',\r\n                                    'Modifier',\r\n                                    'Sell Value',\r\n                                    'Drop by',\r\n                                    'Other',\r\n                                ]}\r\n                                rows={GearRow(equipments[type])}\r\n                            />\r\n                        </div>\r\n                    </section>\r\n                );\r\n            })}\r\n            <section id='Spells' className='anchor-Zone'>\r\n                <H3>Spells</H3>\r\n                <div>\r\n                    <Table\r\n                        header={[\r\n                            'Icon',\r\n                            'Name',\r\n                            'level',\r\n                            'Effect',\r\n                            'Sell Value',\r\n                            'Drop by',\r\n                            'Other',\r\n                        ]}\r\n                        rows={NonGearRow(spell, 'spell')}\r\n                    />\r\n                </div>\r\n            </section>\r\n            <section id='Sets' className='anchor-Zone'>\r\n                <H3>Sets</H3>\r\n                <div>\r\n                    <p>\r\n                        By equiping a full set, you'll have a unique stats\r\n                        boost.\r\n                    </p>\r\n                    <p>List of sets :</p>\r\n\r\n                    {setsBonus.map((set, id) => {\r\n                        return (\r\n                            <div key={id}>\r\n                                <h4\r\n                                    id={set.name.split(' ').join('_')}\r\n                                    className='anchor-Zone'\r\n                                >\r\n                                    {set.name} (Bonus : {set.bonus})\r\n                                </h4>\r\n                                <ul className='no-list-style'>\r\n                                    {set.items.map((item, id) => {\r\n                                        return (\r\n                                            <li key={id}>\r\n                                                <Link\r\n                                                    to={`/items#${item\r\n                                                        .split(' ')\r\n                                                        .join('_')}`}\r\n                                                >\r\n                                                    {item}\r\n                                                </Link>\r\n                                            </li>\r\n                                        );\r\n                                    })}\r\n                                </ul>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </section>\r\n            {Object.keys(items).map((type, id) => {\r\n                return (\r\n                    <section\r\n                        key={id}\r\n                        id={type.split(' ').join('_')}\r\n                        className='anchor-Zone'\r\n                    >\r\n                        <H3>\r\n                            {type.substring(0, 1).toUpperCase() +\r\n                                type.substring(1)}\r\n                        </H3>\r\n                        <div>\r\n                            {type === 'quest item' ? (\r\n                                <Table\r\n                                    header={['Icon', 'Name']}\r\n                                    rows={NonGearRow(items[type], 'quest-item')}\r\n                                />\r\n                            ) : type === 'consumable' ? (\r\n                                <Table\r\n                                    header={[\r\n                                        'Icon',\r\n                                        'Name',\r\n                                        'Effect',\r\n                                        'Sell Value',\r\n                                        'Drop by',\r\n                                        'Other',\r\n                                    ]}\r\n                                    rows={NonGearRow(items[type], 'consumable')}\r\n                                />\r\n                            ) : (\r\n                                <Table\r\n                                    header={[\r\n                                        'Icon',\r\n                                        'Name',\r\n                                        'Sell Value',\r\n                                        'Drop by',\r\n                                        'Other',\r\n                                    ]}\r\n                                    rows={NonGearRow(items[type])}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                    </section>\r\n                );\r\n            })}\r\n        </main>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Sprite from '../Sprite';\r\n\r\nconst sets = {\r\n    1: 'Crusader set',\r\n    2: 'Elven set',\r\n    3: 'Magic set',\r\n    4: 'Merlin set',\r\n    5: 'Viking set',\r\n    6: 'Bandit set',\r\n    7: 'Ninja set',\r\n    8: 'Jester set',\r\n    9: 'Witch doctor set',\r\n    10: 'Death set',\r\n    11: 'Spectral set',\r\n    12: 'Pirate set',\r\n    13: 'Zombie set',\r\n    14: 'Shaman set',\r\n};\r\n\r\nexport default function GearRow(items) {\r\n    return items\r\n        .sort((a, b) => ~~a.level - ~~b.level)\r\n        .reduce((acc, item) => {\r\n            return [\r\n                ...acc,\r\n                {\r\n                    id: item.name.split(' ').join('_').replace(\"'\", '_'),\r\n                    data: [\r\n                        <Sprite tile={item.tile} spriteSheet='tiles' className='sprite' title={item.name} alt={item.name} />,\r\n                        <Link to={`/items#${item.name.split(' ').join('_').replace(\"'\", '_')}`}>{item.name}</Link>,\r\n                        item.level,\r\n                        item.classes ? item.classes.split(',').map((clas, id) => <p key={id}>{clas}</p>) : 'All',\r\n                        item.attackMod ? item.attackMod : '0',\r\n                        item.defenceMod ? item.defenceMod : '0',\r\n                        <ItemModifier modifiers={item.modifier} />,\r\n                        ~~(item.cost * 0.05) + 1,\r\n                        item.dropedBy.length ? (\r\n                            <div className='maxScroll'>\r\n                                <ul>\r\n                                    {item.dropedBy.map((dropedBy) => {\r\n                                        return (\r\n                                            <li key={dropedBy.name}>\r\n                                                <Link to={`/monsters#${dropedBy.name.split(' ').join('_').replace(\"'\", '_')}`}>{dropedBy.name}</Link>{' '}\r\n                                                {`${dropedBy.chance === '100/100' ? '' : ``} ${(\r\n                                                    (~~dropedBy.chance.split('/')[0] / ~~dropedBy.chance.split('/')[1]) *\r\n                                                    100\r\n                                                )\r\n                                                    .toFixed(2)\r\n                                                    .replace(/\\.0+$/, '')}%`}\r\n                                            </li>\r\n                                        );\r\n                                    })}\r\n                                </ul>\r\n                            </div>\r\n                        ) : (\r\n                            '–'\r\n                        ),\r\n                        item.foundIn.length ? (\r\n                            <div className='maxScroll'>\r\n                                <ul>\r\n                                    {item.foundIn.map((foundIn, id) => {\r\n                                        if (foundIn === 'Shops') {\r\n                                            return (\r\n                                                <li key={id}>\r\n                                                    <Link to={`/shops#${item.name.split(' ').join('_').replace(\"'\", '_')}`}>Shops</Link>\r\n                                                </li>\r\n                                            );\r\n                                        } else if (foundIn === 'Treasure Map') {\r\n                                            return (\r\n                                                <li key={id}>\r\n                                                    <Link to={`/activities#treasure_maps`}>Treasure Map</Link>\r\n                                                </li>\r\n                                            );\r\n                                        } else if (foundIn === 'Crafting') {\r\n                                            return (\r\n                                                <li key={id}>\r\n                                                    <Link to={`/activities#crafting`}>Crafting</Link>\r\n                                                </li>\r\n                                            );\r\n                                        } else if (foundIn === 'Finding') {\r\n                                            return (\r\n                                                <li key={id}>\r\n                                                    <Link to={`/activities#finding`}>Finding</Link>\r\n                                                </li>\r\n                                            );\r\n                                        } else if (foundIn === 'Fishing') {\r\n                                            return (\r\n                                                <li key={id}>\r\n                                                    <Link to={`/activities#fishing`}>Fishing</Link>\r\n                                                </li>\r\n                                            );\r\n                                        } else if (foundIn === 'Digging') {\r\n                                            return (\r\n                                                <li key={id}>\r\n                                                    <Link to={`/activities#digging`}>Digging</Link>\r\n                                                </li>\r\n                                            );\r\n                                        } else if (foundIn.name) {\r\n                                            return (\r\n                                                <li key={id}>\r\n                                                    <Link to={`/dungeons#${foundIn.name.split(' ').slice(0, -1).join('_').replace(\"'\", '_')}`}>\r\n                                                        {foundIn.name}\r\n                                                    </Link>{' '}\r\n                                                    {`${foundIn.chance === '100/100' ? '' : ``} ${(\r\n                                                        (~~foundIn.chance.split('/')[0] / ~~foundIn.chance.split('/')[1]) *\r\n                                                        100\r\n                                                    )\r\n                                                        .toFixed(2)\r\n                                                        .replace(/\\.0+$/, '')}%`}\r\n                                                </li>\r\n                                            );\r\n                                        } else {\r\n                                            return (\r\n                                                <li key={id}>\r\n                                                    Quest{' '}\r\n                                                    <Link to={`/quests#${foundIn.quest.split(' ').join('_').replace(\"'\", '_')}`}>\r\n                                                        {foundIn.quest}\r\n                                                    </Link>\r\n                                                </li>\r\n                                            );\r\n                                        }\r\n                                    })}\r\n                                </ul>\r\n                            </div>\r\n                        ) : (\r\n                            '–'\r\n                        ),\r\n                    ],\r\n                },\r\n            ];\r\n        }, []);\r\n}\r\n\r\nfunction ItemModifier({ modifiers }) {\r\n    if (!modifiers) {\r\n        return '–';\r\n    }\r\n\r\n    if (!Array.isArray(modifiers)) {\r\n        modifiers = [modifiers];\r\n    }\r\n\r\n    modifiers = modifiers.map((modif, id) => {\r\n        switch (modif.type) {\r\n            case 'tick':\r\n                return (\r\n                    <p key={id} className='gear-info'>\r\n                        {modif.value.substring(0, 1) === '-' ? `- ${modif.value.substring(1)}` : `+ ${modif.value}`} {modif.attribute} /{' '}\r\n                        {modif.attribute === 'hp' ? 'attack' : 'turn'}\r\n                    </p>\r\n                );\r\n\r\n            case 'magic':\r\n            case 'resist':\r\n                return (\r\n                    <p key={id} className='gear-info'>\r\n                        + {modif.value} {modif.type}\r\n                    </p>\r\n                );\r\n\r\n            case 'set':\r\n                return (\r\n                    <a key={id} className='gear-info' href={`#${sets[modif.value].split(' ').join('_')}`}>\r\n                        {sets[modif.value]}\r\n                    </a>\r\n                );\r\n\r\n            default:\r\n                return (\r\n                    <p key={id} className='gear-info'>\r\n                        {modif.value.substring(0, 1) === '-' ? `- ${modif.value.substring(1)}` : `+ ${modif.value}`} {modif.attribute} vs {modif.type}\r\n                    </p>\r\n                );\r\n        }\r\n    });\r\n\r\n    return <>{modifiers}</>;\r\n}\r\n","import React from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\nimport './styles.css';\r\n\r\nexport default function Navigation() {\r\n    const path = useLocation().pathname.substring(1);\r\n\r\n    return (\r\n        <nav className='navigation'>\r\n            <ul>\r\n                <li>\r\n                    <Link to='/' className={!path ? 'active' : ''}>\r\n                        Home\r\n                    </Link>\r\n                </li>\r\n                {['player', 'items', 'monsters', 'dungeons', 'quests', 'activities', 'shops', 'world map'].map((link, id) => {\r\n                    return (\r\n                        <li key={id}>\r\n                            <Link to={`/${link.split(' ').join('_')}`} className={path === link ? 'active' : ''}>\r\n                                {link.substring(0, 1).toUpperCase() + link.substring(1)}\r\n                            </Link>\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nimport './styles.css';\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <footer className='footer'>\r\n            <p>\r\n                Fan wiki for the{' '}\r\n                <a target='_blank' rel='noreferrer' href='https://www.legendsofyore.com/' title='Legends of Yore website'>\r\n                    Legends of Yore\r\n                </a>{' '}\r\n                made by Polfy#6924\r\n            </p>\r\n        </footer>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport H2 from '../components/H2';\r\n\r\nexport default function Home() {\r\n    window.scrollTo(0, 0);\r\n\r\n    return (\r\n        <div className='content'>\r\n            <h1 style={{ visibility: 'hidden', position: 'absolute' }}>Legend of Yore - Wiki</h1>\r\n            <H2>Legend of Yore - Wiki</H2>\r\n            <section>\r\n                <div>\r\n                    <p>\r\n                        This is a work in progress in-depth wiki about the{' '}\r\n                        <a target='_blank' rel='noreferrer' href='https://www.legendsofyore.com/' title='Legends of Yore website'>\r\n                            Legends of Yore\r\n                        </a>\r\n                        .\r\n                    </p>\r\n                    <p>\r\n                        <a target='_blank' rel='noreferrer' href='https://discord.gg/YKXpRrrunp' title='Legends of Yore Discord'>\r\n                            Legends of Yore Discord\r\n                        </a>\r\n                    </p>\r\n                    <p className='bold underline'>Already Done :</p>\r\n                    <ul className='no-list-style'>\r\n                        {[\r\n                            'Player section',\r\n                            'Added Shops',\r\n                            'Added activities (Repairing, Crafting, TMaps, Digging, Fishing, Finding)',\r\n                            'All quests added + Add quest reward on items',\r\n                            'World map Dungeons / Monsters finish',\r\n                            'Monsters / Dungeons finish',\r\n                            'Hidden Cove in-depth info',\r\n                            'New theme',\r\n                            'Imported all raw Dungeons / Monsters / Items',\r\n                        ].map((txt, id) => (\r\n                            <li key={id}>✅ {txt}</li>\r\n                        ))}\r\n                    </ul>\r\n                    <p className='bold underline'>Planned :</p>\r\n                    <ul className='no-list-style'>\r\n                        {['guide section', 'New top navigation + mobile friendly', 'More Mobile friendly'].map((txt, id) => (\r\n                            <li key={id}>⏩ {txt}</li>\r\n                        ))}\r\n                    </ul>\r\n                    <p className='bold underline'>Known issues :</p>\r\n                    <ul className='no-list-style'>\r\n                        {['Firefox table scroll'].map((txt, id) => (\r\n                            <li key={id}>❗ {txt}</li>\r\n                        ))}\r\n                    </ul>\r\n                    <br />\r\n                    <br />\r\n                </div>\r\n            </section>\r\n\r\n            <H2>Contributing - Reporting issues</H2>\r\n            <section>\r\n                <div>\r\n                    <p>This wiki is edited only by it's owner (Polfy#6924)</p>\r\n                    <p>If you want to contribute (text, image) or report any issues, feel free to contact me on Discord at Polfy#6924.</p>\r\n                    <p>\r\n                        <a target='_blank' rel='noreferrer' href='https://discord.gg/YKXpRrrunp' title='Legends of Yore Discord'>\r\n                            Legends of Yore Discord\r\n                        </a>\r\n                    </p>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nimport './styles.css';\r\n\r\nexport default function LevelCalc() {\r\n    const [startLevel, setStartLevel] = useState(10);\r\n    const [targetLevel, setTargetLevel] = useState(12);\r\n\r\n    return (\r\n        <div className='levelCalc'>\r\n            <label>Your level :</label>\r\n            <input type='number' name='startLevel' value={startLevel} onChange={({ target }) => setStartLevel(target.value)} />\r\n            <label>Target level :</label>\r\n            <input type='number' name='targetLevel' value={targetLevel} onChange={({ target }) => setTargetLevel(target.value)} />\r\n            <p>\r\n                {targetLevel <= startLevel\r\n                    ? 'Your taget level should be greater then you starting level'\r\n                    : `Experience needed : ${getExpToLevel(targetLevel - 1) - (startLevel - 1 === 0 ? 0 : getExpToLevel(startLevel - 1))}`}\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction getExpToLevel(level) {\r\n    return 1000 + (level - 1) * (level - 1) * 1500 + level * 250;\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\nimport H2 from '../components/H2';\r\nimport H3 from '../components/H3';\r\nimport PageHeader from '../components/PageHeader';\r\nimport Table from '../components/Table';\r\nimport Sprite from '../components/Sprite';\r\n\r\nimport LevelCalc from '../components/LevelCalc';\r\n\r\nimport { DataContext } from '../context/dataContext';\r\n\r\nconst pets = [\r\n    {\r\n        tile: '67',\r\n        name: 'Chicken',\r\n        level: 15,\r\n        cost: 25000,\r\n        maxLevel: 30,\r\n        baseHp: 10,\r\n        hpGain: 1,\r\n        baseAtk: 1,\r\n        atkGain: 0.5,\r\n        baseDef: 2,\r\n        defGain: 0.5,\r\n        baseCharge: 0,\r\n        chargeGain: 1,\r\n        names: ['Arnold', 'Cluckles', 'Kentucy', 'Fluffy', 'Boris', 'Drumstick'],\r\n        abilities: [\r\n            { level: 10, name: 'Fire Breathing' },\r\n            { level: 25, name: 'Poison Peck' },\r\n        ],\r\n        evolve: false,\r\n    },\r\n    {\r\n        tile: '359',\r\n        name: 'Monkey',\r\n        level: 15,\r\n        cost: 25000,\r\n        maxLevel: 30,\r\n        baseHp: 10,\r\n        hpGain: 1,\r\n        baseAtk: 1,\r\n        atkGain: 0.6,\r\n        baseDef: 2,\r\n        defGain: 0.4,\r\n        baseCharge: 0,\r\n        chargeGain: 1,\r\n        names: ['Bubbles', 'MrTeeny', 'Nibbler', 'Shakes', 'Moo', 'Scooter'],\r\n        abilities: [{ level: 10, name: 'Poison Bite' }],\r\n        evolve: false,\r\n    },\r\n    {\r\n        tile: '28',\r\n        name: 'Wild Dog',\r\n        level: 45,\r\n        cost: 50000,\r\n        maxLevel: 35,\r\n        baseHp: 15,\r\n        hpGain: 2,\r\n        baseAtk: 2,\r\n        atkGain: 1,\r\n        baseDef: 3,\r\n        defGain: 0.5,\r\n        baseCharge: 0,\r\n        chargeGain: 0,\r\n        names: ['Barker', 'Bingo', 'Fido', 'Butch', 'Hobbo', 'Defer'],\r\n        abilities: [\r\n            { level: 12, name: 'Poison Bite' },\r\n            { level: 25, name: 'Poison Mawl' },\r\n        ],\r\n        evolve: false,\r\n    },\r\n    {\r\n        tile: '356',\r\n        name: 'Blue Slime',\r\n        level: 75,\r\n        cost: 100000,\r\n        maxLevel: 40,\r\n        baseHp: 25,\r\n        hpGain: 3,\r\n        baseAtk: 4,\r\n        atkGain: 1.5,\r\n        baseDef: 5,\r\n        defGain: 1,\r\n        baseCharge: 0,\r\n        chargeGain: 0,\r\n        names: ['Goop', 'Fry', 'Gish', 'Mookie', 'Slim', 'Mauve'],\r\n        abilities: [\r\n            { level: 12, name: 'Poison Touch' },\r\n            { level: 23, name: 'Poison Slime' },\r\n            { level: 33, name: 'Poison Grab' },\r\n        ],\r\n        evolve: { level: 30, name: 'Bluholder', tile: '361' },\r\n    },\r\n    {\r\n        tile: '355',\r\n        name: 'Drake',\r\n        level: 105,\r\n        cost: 250000,\r\n        maxLevel: 40,\r\n        baseHp: 40,\r\n        hpGain: 5,\r\n        baseAtk: 12,\r\n        atkGain: 2,\r\n        baseDef: 13,\r\n        defGain: 2,\r\n        baseCharge: 25,\r\n        chargeGain: 5,\r\n        names: ['Drako', 'Mavis', 'Smorg', 'Bathos', 'Isdare', 'Gorin'],\r\n        abilities: [\r\n            { level: 8, name: 'Fire Breathing' },\r\n            { level: 12, name: 'Poison Bite' },\r\n            { level: 19, name: 'Frost Breath' },\r\n            { level: 29, name: 'Fire Blast' },\r\n        ],\r\n        evolve: { level: 25, name: 'Dragoon', tile: '360' },\r\n    },\r\n    {\r\n        tile: '358',\r\n        name: 'Gorilla',\r\n        level: 125,\r\n        cost: 35000,\r\n        maxLevel: 50,\r\n        baseHp: 55,\r\n        hpGain: 1,\r\n        baseAtk: 15,\r\n        atkGain: 2.5,\r\n        baseDef: 13,\r\n        defGain: 2.5,\r\n        baseCharge: 0,\r\n        chargeGain: 1,\r\n        names: ['Alfie', 'Patrick', 'Rupert', 'Caeser', 'Frank', 'Kong'],\r\n        abilities: [],\r\n        evolve: false,\r\n    },\r\n    {\r\n        tile: '362',\r\n        name: 'Croc',\r\n        level: 130,\r\n        cost: 35000,\r\n        maxLevel: 55,\r\n        baseHp: 60,\r\n        hpGain: 1,\r\n        baseAtk: 14,\r\n        atkGain: 2.6,\r\n        baseDef: 15,\r\n        defGain: 2.8,\r\n        baseCharge: 0,\r\n        chargeGain: 1,\r\n        names: ['Snapper', 'Chomp', 'Munch', 'Smiler', 'TickTock', 'Ali'],\r\n        abilities: [\r\n            { level: 15, name: 'Poison Tear' },\r\n            { level: 30, name: 'Fire Breathing' },\r\n            { level: 45, name: 'Clamp of Poisons' },\r\n        ],\r\n        evolve: false,\r\n    },\r\n];\r\n\r\nconst warSprite = <Sprite tile='16' spriteSheet='chars' className='sprite' title='Warrior' alt='Warrior' />;\r\nconst archSprite = <Sprite tile='18' spriteSheet='chars' className='sprite' title='Archer' alt='Archer' />;\r\nconst wizSprite = <Sprite tile='17' spriteSheet='chars' className='sprite' title='Wizard' alt='Wizard' />;\r\n\r\nexport default function Dungeons() {\r\n    const { war_skills, arch_skills, spell } = useContext(DataContext).skillsSpell;\r\n    const hash = useLocation().hash;\r\n\r\n    const [statLevel, setStatLevel] = useState(61);\r\n\r\n    useEffect(() => {\r\n        if (hash && document.querySelector(hash)) {\r\n            document.querySelector(hash).scrollIntoView();\r\n        } else {\r\n            window.scrollTo(0, 0);\r\n        }\r\n    }, [hash]);\r\n\r\n    return (\r\n        <main className='content'>\r\n            <H2>Player</H2>\r\n            <PageHeader\r\n                tablaOfContent={['Warrior', 'Archer', 'Wizard', 'Subclass', 'Experience', 'Stats', 'Pets'].reduce(\r\n                    (acc, key) => [...acc, <a href={`#${key}`}>{key}</a>],\r\n                    []\r\n                )}\r\n            ></PageHeader>\r\n            <section id='Warrior' className='anchor-Zone'>\r\n                <H3>Warrior</H3>\r\n                <div>\r\n                    <div style={{ width: '40px' }}>{warSprite}</div>\r\n                    <p>Warrior use melee weapon, shield and the rage ability.</p>\r\n                    <p>\r\n                        Unlike the other classes, rage only increases when damage is taken, and decreases when damage is not taken. Rage allows for\r\n                        higher hits. The more close your are to max rage, the higher the chance is to deal a critical hit.\r\n                    </p>\r\n                    <p>\r\n                        List of skills learned by <Link to={`/world_map#i=Aria_Island&x=-48.922499&y=-51.679688`}>Ryu</Link> :\r\n                    </p>\r\n                    <Table\r\n                        header={['Icon', 'Name', 'Level', 'description']}\r\n                        rows={war_skills.reduce(\r\n                            (acc, skill) => [\r\n                                ...acc,\r\n                                {\r\n                                    id: '',\r\n                                    data: [\r\n                                        <Sprite tile={skill.tile} spriteSheet='tiles' className='sprite' title={skill.name} alt={skill.name} />,\r\n                                        skill.name,\r\n                                        skill.level,\r\n                                        skill.desc,\r\n                                    ],\r\n                                },\r\n                            ],\r\n                            []\r\n                        )}\r\n                    />\r\n                </div>\r\n            </section>\r\n\r\n            <section id='Archer' className='anchor-Zone'>\r\n                <H3>Archer</H3>\r\n                <div>\r\n                    <div style={{ width: '40px' }}>{archSprite}</div>\r\n                    <p>Archer use ranged weapon, arrows and the zen ability.</p>\r\n                    <p>\r\n                        Zen increases by skipping turns and decreases when damage is taken. Zen allows for higher hits. The more close your are to max\r\n                        zen, the higher the chance is to deal a critical hit.\r\n                    </p>\r\n                    <p>\r\n                        List of skills learned by <Link to={`/world_map#i=Aria_Island&x=-48.922499&y=-51.679688`}>Ryu</Link> :\r\n                    </p>\r\n                    <Table\r\n                        header={['Icon', 'Name', 'Level', 'description']}\r\n                        rows={arch_skills.reduce(\r\n                            (acc, skill) => [\r\n                                ...acc,\r\n                                {\r\n                                    id: '',\r\n                                    data: [\r\n                                        <Sprite tile={skill.tile} spriteSheet='tiles' className='sprite' title={skill.name} alt={skill.name} />,\r\n                                        skill.name,\r\n                                        skill.level,\r\n                                        skill.desc,\r\n                                    ],\r\n                                },\r\n                            ],\r\n                            []\r\n                        )}\r\n                    />\r\n                </div>\r\n            </section>\r\n\r\n            <section id='Wizard' className='anchor-Zone'>\r\n                <H3>Wizard</H3>\r\n                <div>\r\n                    <div style={{ width: '40px' }}>{wizSprite}</div>\r\n                    <p>Wizard use staff, books and the charge ability.</p>\r\n                    <p>Charge increases by skipping turns. Charge allows you to cast your spells.</p>\r\n                    <p>List of spells you can learn :</p>\r\n                    <Table\r\n                        header={['Icon', 'Name', 'Level', 'charge cost', 'description']}\r\n                        rows={spell.reduce(\r\n                            (acc, skill) => [\r\n                                ...acc,\r\n                                {\r\n                                    id: '',\r\n                                    data: [\r\n                                        <Sprite tile={skill.tile} spriteSheet='tiles' className='sprite' title={skill.name} alt={skill.name} />,\r\n                                        skill.name,\r\n                                        skill.level,\r\n                                        skill.charge,\r\n                                        skill.desc,\r\n                                    ],\r\n                                },\r\n                            ],\r\n                            []\r\n                        )}\r\n                    />\r\n                </div>\r\n            </section>\r\n\r\n            <section id='Subclass' className='anchor-Zone'>\r\n                <H3>Subclass</H3>\r\n                <div>\r\n                    <p>\r\n                        At level 50 you can talk to Kayla in <Link to={`/dungeons#S_Thel_Oasis`}>S'Thel Oasis F2</Link> behind the crack.\r\n                    </p>\r\n                    <p>She will let you choose a subclass (one of the two others classes).</p>\r\n                    <p>\r\n                        This new class will have 50 less levels than your character base level and you will be able to wear items and use\r\n                        skills/spells from this class.\r\n                    </p>\r\n                    <Table\r\n                        header={['Your class', 'Subclass', 'Result', 'Name']}\r\n                        rows={[\r\n                            {\r\n                                id: '',\r\n                                data: [\r\n                                    warSprite,\r\n                                    archSprite,\r\n                                    <Sprite tile='240' spriteSheet='chars' className='sprite' title='Barbarian' alt='Barbarian' />,\r\n                                    'Barbarian',\r\n                                ],\r\n                            },\r\n                            {\r\n                                id: '',\r\n                                data: [\r\n                                    warSprite,\r\n                                    wizSprite,\r\n                                    <Sprite tile='241' spriteSheet='chars' className='sprite' title='Paladin' alt='Paladin' />,\r\n                                    'Paladin',\r\n                                ],\r\n                            },\r\n                            {\r\n                                id: '',\r\n                                data: [\r\n                                    archSprite,\r\n                                    warSprite,\r\n                                    <Sprite tile='244' spriteSheet='chars' className='sprite' title='Rogue' alt='Rogue' />,\r\n                                    'Rogue',\r\n                                ],\r\n                            },\r\n                            {\r\n                                id: '',\r\n                                data: [\r\n                                    archSprite,\r\n                                    wizSprite,\r\n                                    <Sprite tile='245' spriteSheet='chars' className='sprite' title='Monk' alt='Monk' />,\r\n                                    'Monk',\r\n                                ],\r\n                            },\r\n                            {\r\n                                id: '',\r\n                                data: [\r\n                                    wizSprite,\r\n                                    warSprite,\r\n                                    <Sprite tile='243' spriteSheet='chars' className='sprite' title='Warlock' alt='Warlock' />,\r\n                                    'Warlock',\r\n                                ],\r\n                            },\r\n                            {\r\n                                id: '',\r\n                                data: [\r\n                                    wizSprite,\r\n                                    archSprite,\r\n                                    <Sprite tile='242' spriteSheet='chars' className='sprite' title='Archmage' alt='Archmage' />,\r\n                                    'Archmage',\r\n                                ],\r\n                            },\r\n                        ]}\r\n                    />\r\n                </div>\r\n            </section>\r\n\r\n            <section id='Experience' className='anchor-Zone'>\r\n                <H3>Experience</H3>\r\n                <div>\r\n                    <p>Every time you or your pet kill an ennemy, you'll earn experience.</p>\r\n                    <p>\r\n                        The experience required to hit a <code>[level]</code> from 0 is{' '}\r\n                        <code>(1000 + ([level] - 1) * ([level] - 1) * 1500 + [level] * 250)</code>\r\n                    </p>\r\n                    <Table\r\n                        header={[\r\n                            'Level',\r\n                            'Exp to next',\r\n                            'Total exp',\r\n                            ' ',\r\n                            'Level',\r\n                            'Exp to next',\r\n                            'Total exp',\r\n                            ' ',\r\n                            'Level',\r\n                            'Exp to next',\r\n                            'Total exp',\r\n                        ]}\r\n                        rows={['_'].reduce((__, _) => {\r\n                            const acc = [];\r\n                            for (let i = 0; i < 20; i++) {\r\n                                acc.push({\r\n                                    id: '',\r\n                                    data: [\r\n                                        i + 1,\r\n                                        getExpToLevel(i + 1) - (i === 0 ? 0 : getExpToLevel(i)),\r\n                                        i === 0 ? 0 : getExpToLevel(i),\r\n                                        '',\r\n                                        i + 1 + 20,\r\n                                        getExpToLevel(i + 1 + 20) - getExpToLevel(i + 20),\r\n                                        getExpToLevel(i + 20),\r\n                                        '',\r\n                                        i + 1 + 40,\r\n                                        getExpToLevel(i + 1 + 40) - getExpToLevel(i + 40),\r\n                                        getExpToLevel(i + 40),\r\n                                    ],\r\n                                });\r\n                            }\r\n                            return acc;\r\n                        }, [])}\r\n                    />\r\n                    <LevelCalc />\r\n                </div>\r\n            </section>\r\n\r\n            <section id='Stats' className='anchor-Zone'>\r\n                <H3>Stats</H3>\r\n                <div>\r\n                    <p>Stat gain follow these formulas (always rounded down) :</p>\r\n                    <p>\r\n                        Hp / Rage / Zen / Charge (below level 10) : <code>[currentStat] * 1.1</code>\r\n                    </p>\r\n                    <p>\r\n                        Hp / Rage / Zen / Charge (level 10 +) : <code>[currentStat] + ([currentLevel] / 3)</code>\r\n                    </p>\r\n                    <p>\r\n                        Rage / Zen / Charge (From subclass) : <code>[currentStat] + (([currentLevel] / 3) * 3 - 40) / 5</code>\r\n                    </p>\r\n                    <Table\r\n                        header={[\r\n                            'Level',\r\n                            <div>\r\n                                {warSprite}\r\n                                <span>HP</span>\r\n                            </div>,\r\n                            <div>\r\n                                {archSprite}\r\n                                <span>HP</span>\r\n                            </div>,\r\n                            <div>\r\n                                {wizSprite}\r\n                                <span>HP</span>\r\n                            </div>,\r\n                            <div>\r\n                                {warSprite}\r\n                                <span>Rage</span>\r\n                            </div>,\r\n                            <div>\r\n                                {archSprite}\r\n                                <span>Zen</span>\r\n                            </div>,\r\n                            <div>\r\n                                {wizSprite}\r\n                                <span>Charge</span>\r\n                            </div>,\r\n                        ]}\r\n                        rows={['_'].reduce((__, _) => {\r\n                            const acc = [];\r\n                            for (let i = 1; i <= 20; i++) {\r\n                                acc.push({\r\n                                    id: '',\r\n                                    data: [i, getStat(i, 50), getStat(i, 40), getStat(i, 30), getStat(i, 10), getStat(i, 10), getStat(i, 40)],\r\n                                });\r\n                            }\r\n                            return acc;\r\n                        }, [])}\r\n                    />\r\n                    <Table\r\n                        header={[\r\n                            'Level',\r\n                            <div>\r\n                                <Sprite tile='240' spriteSheet='chars' className='sprite' title='Barbarian' alt='Barbarian' />\r\n                                <Sprite tile='241' spriteSheet='chars' className='sprite' title='Paladin' alt='Paladin' />\r\n                                <span>HP</span>\r\n                            </div>,\r\n                            <div>\r\n                                <Sprite tile='244' spriteSheet='chars' className='sprite' title='Rogue' alt='Rogue' />\r\n                                <Sprite tile='245' spriteSheet='chars' className='sprite' title='Monk' alt='Monk' />\r\n                                <span>HP</span>\r\n                            </div>,\r\n                            <div>\r\n                                <Sprite tile='243' spriteSheet='chars' className='sprite' title='Warlock' alt='Warlock' />\r\n                                <Sprite tile='242' spriteSheet='chars' className='sprite' title='Archmage' alt='Archmage' />\r\n                                <span>HP</span>\r\n                            </div>,\r\n                            <div>\r\n                                <Sprite tile='240' spriteSheet='chars' className='sprite' title='Barbarian' alt='Barbarian' />\r\n                                <Sprite tile='241' spriteSheet='chars' className='sprite' title='Paladin' alt='Paladin' />\r\n                                <span>Rage</span>\r\n                            </div>,\r\n                            <div>\r\n                                <Sprite tile='244' spriteSheet='chars' className='sprite' title='Rogue' alt='Rogue' />\r\n                                <Sprite tile='245' spriteSheet='chars' className='sprite' title='Monk' alt='Monk' />\r\n                                <span>Zen</span>\r\n                            </div>,\r\n                            <div>\r\n                                <Sprite tile='243' spriteSheet='chars' className='sprite' title='Warlock' alt='Warlock' />\r\n                                <Sprite tile='242' spriteSheet='chars' className='sprite' title='Archmage' alt='Archmage' />\r\n                                <span>Charge</span>\r\n                            </div>,\r\n                            <div>\r\n                                <Sprite tile='244' spriteSheet='chars' className='sprite' title='Rogue' alt='Rogue' />\r\n                                <Sprite tile='243' spriteSheet='chars' className='sprite' title='Warlock' alt='Warlock' />\r\n                                <span>Rage</span>\r\n                            </div>,\r\n                            <div>\r\n                                <Sprite tile='240' spriteSheet='chars' className='sprite' title='Barbarian' alt='Barbarian' />\r\n                                <Sprite tile='242' spriteSheet='chars' className='sprite' title='Archmage' alt='Archmage' />\r\n                                <span>Zen</span>\r\n                            </div>,\r\n                            <div>\r\n                                <Sprite tile='241' spriteSheet='chars' className='sprite' title='Paladin' alt='Paladin' />\r\n                                <Sprite tile='245' spriteSheet='chars' className='sprite' title='Monk' alt='Monk' />\r\n                                <span>Charge</span>\r\n                            </div>,\r\n                        ]}\r\n                        rows={['_'].reduce((__, _) => {\r\n                            const acc = [];\r\n                            for (let i = 50; i <= 60; i++) {\r\n                                acc.push({\r\n                                    id: '',\r\n                                    data: [\r\n                                        i,\r\n                                        getStat(i, 50),\r\n                                        getStat(i, 40),\r\n                                        getStat(i, 30),\r\n                                        getStat(i, 10),\r\n                                        getStat(i, 10),\r\n                                        getStat(i, 40),\r\n                                        getSubStat(i, 5),\r\n                                        getSubStat(i, 10),\r\n                                        getSubStat(i, 7),\r\n                                    ],\r\n                                });\r\n                            }\r\n                            acc.push({\r\n                                id: '',\r\n                                data: [\r\n                                    <input\r\n                                        style={{ width: '70px' }}\r\n                                        type='number'\r\n                                        value={statLevel}\r\n                                        onChange={(e) => {\r\n                                            e.preventDefault();\r\n                                            setStatLevel(e.target.value);\r\n                                        }}\r\n                                    />,\r\n                                    getStat(statLevel, 50),\r\n                                    getStat(statLevel, 40),\r\n                                    getStat(statLevel, 30),\r\n                                    getStat(statLevel, 10),\r\n                                    getStat(statLevel, 10),\r\n                                    getStat(statLevel, 40),\r\n                                    getSubStat(statLevel, 5),\r\n                                    getSubStat(statLevel, 10),\r\n                                    getSubStat(statLevel, 7),\r\n                                ],\r\n                            });\r\n                            return acc;\r\n                        }, [])}\r\n                    />\r\n                </div>\r\n            </section>\r\n\r\n            <section id='Pets' className='anchor-Zone'>\r\n                <H3>Pets</H3>\r\n                <div>\r\n                    <p>\r\n                        Pets are monsters you can buy to severals shops in the world.{' '}\r\n                        <Link to={`/world_map#i=Aria_Island&x=-54.572062&y=10.546875`}>Mobion</Link> will probably be the first one you encounter.\r\n                    </p>\r\n                    <p>Pets wins experiences when dealing the final hits on an ennemy (They earn the same amout of experience than you + 1000).</p>\r\n                    <p>Once they reach their max level, they will stop earning experiences.</p>\r\n                    <p>List of all the pets (Stats are at the max level of the pet).</p>\r\n                    <Table\r\n                        header={[\r\n                            'Icon',\r\n                            'Name',\r\n                            'Owner level',\r\n                            'Cost',\r\n                            'Max Level',\r\n                            'Hp',\r\n                            'Atk',\r\n                            'Def',\r\n                            'Charge',\r\n                            'Possible names',\r\n                            'Abilities',\r\n                            'Evolve',\r\n                        ]}\r\n                        rows={pets.reduce(\r\n                            (acc, pet) => [\r\n                                ...acc,\r\n                                {\r\n                                    id: '',\r\n                                    data: [\r\n                                        <Sprite tile={pet.tile} spriteSheet='chars' className='sprite' title={pet.name} alt={pet.name} />,\r\n                                        pet.name,\r\n                                        pet.level,\r\n                                        pet.cost,\r\n                                        pet.maxLevel,\r\n                                        pet.baseHp + pet.hpGain * pet.maxLevel,\r\n                                        pet.baseAtk + pet.atkGain * pet.maxLevel,\r\n                                        pet.baseDef + pet.defGain * pet.maxLevel,\r\n                                        pet.baseCharge + pet.chargeGain * pet.maxLevel,\r\n                                        <div className='maxScroll'>\r\n                                            <ul>\r\n                                                {pet.names.map((name, id) => (\r\n                                                    <li key={id}>{name}</li>\r\n                                                ))}\r\n                                            </ul>\r\n                                        </div>,\r\n                                        pet.abilities.length ? (\r\n                                            <div className='maxScroll'>\r\n                                                <ul>\r\n                                                    {pet.abilities.map((abi, id) => (\r\n                                                        <li key={id}>\r\n                                                            ({abi.level}) {abi.name}\r\n                                                        </li>\r\n                                                    ))}\r\n                                                </ul>\r\n                                            </div>\r\n                                        ) : (\r\n                                            '–'\r\n                                        ),\r\n                                        pet.evolve ? (\r\n                                            <>\r\n                                                ({pet.evolve.level}) {pet.evolve.name}\r\n                                                <Sprite\r\n                                                    tile={pet.evolve.tile}\r\n                                                    spriteSheet='chars'\r\n                                                    className='sprite'\r\n                                                    title={pet.evolve.name}\r\n                                                    alt={pet.evolve.name}\r\n                                                />\r\n                                            </>\r\n                                        ) : (\r\n                                            '–'\r\n                                        ),\r\n                                    ],\r\n                                },\r\n                            ],\r\n                            []\r\n                        )}\r\n                    />\r\n                </div>\r\n            </section>\r\n        </main>\r\n    );\r\n}\r\n\r\nfunction getExpToLevel(level) {\r\n    return 1000 + (level - 1) * (level - 1) * 1500 + level * 250;\r\n}\r\n\r\nfunction getStat(level, base) {\r\n    let stat = base;\r\n\r\n    for (let i = 2; i <= level; i++) {\r\n        if (i < 10) {\r\n            stat = Math.floor(stat * 1.1);\r\n        } else {\r\n            stat += Math.floor(i / 3);\r\n        }\r\n    }\r\n\r\n    return stat;\r\n}\r\n\r\nfunction getSubStat(level, base) {\r\n    let stat = base;\r\n\r\n    for (let i = 51; i <= level; i++) {\r\n        stat += Math.floor((Math.floor(i / 3) * 3 - 40) / 5);\r\n    }\r\n\r\n    return stat;\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Sprite from '../Sprite';\r\n\r\nexport default function MonsterRow(monsters, isRare = false) {\r\n    return monsters.reduce((acc, monster) => {\r\n        const { health, attack, defence, charge, zen, rage } = monster.statistics;\r\n\r\n        return [\r\n            ...acc,\r\n            {\r\n                id: monster.name.split(' ').join('_'),\r\n                data: [\r\n                    <Sprite tile={monster.tile} spriteSheet='chars' className='sprite' title={monster.name} alt={monster.name} />,\r\n                    <Link to={`/monsters#${monster.name.split(' ').join('_')}`}>{monster.name}</Link>,\r\n                    monster.exp,\r\n                    monster.kingdom,\r\n                    health,\r\n                    attack,\r\n                    defence,\r\n                    `${charge ? charge : 0} / ${zen ? zen : 0} / ${rage ? rage : 0}`,\r\n                    <div className='maxScroll'>\r\n                        <ul>{GetDrop(monster)}</ul>\r\n                    </div>,\r\n                    isRare ? (\r\n                        <>\r\n                            {monster.foundIn}{' '}\r\n                            <Link to={`/monsters#${monster.name === 'Golden Imp' ? 'Black_Imp' : monster.name.split(' ')[1]}`}>\r\n                                {monster.name === 'Golden Imp' ? 'Black Imp' : monster.name.split(' ')[1]}\r\n                            </Link>\r\n                        </>\r\n                    ) : monster.foundIn.length ? (\r\n                        <div className='maxScroll'>\r\n                            <ul>\r\n                                {monster.foundIn.map((foundIn, id) => {\r\n                                    if (\r\n                                        foundIn.split(' ')[0] !== 'The' &&\r\n                                        (foundIn.split(' ')[1] === 'Island' || foundIn.split(' ')[2] === 'Island')\r\n                                    ) {\r\n                                        return (\r\n                                            <li key={id}>\r\n                                                <Link to={`/world_map#${foundIn.split(' ').join('_')}`}>{foundIn}</Link>\r\n                                            </li>\r\n                                        );\r\n                                    } else {\r\n                                        return (\r\n                                            <li key={id}>\r\n                                                <Link to={`/dungeons#${foundIn.split(' ').slice(0, -1).join('_').replace(\"'\", '_')}`}>{foundIn}</Link>\r\n                                            </li>\r\n                                        );\r\n                                    }\r\n                                })}\r\n                            </ul>\r\n                        </div>\r\n                    ) : (\r\n                        '–'\r\n                    ),\r\n                ],\r\n            },\r\n        ];\r\n    }, []);\r\n}\r\n\r\nfunction GetDrop(monster) {\r\n    if ((!monster.item && !monster.itemChance) || monster.name === 'Devil') {\r\n        return '–';\r\n    } else {\r\n        return (\r\n            <>\r\n                {monster.item ? <ItemsDrop items={monster.item} /> : null}\r\n                {monster.itemChance ? <ItemChance itemChance={monster.itemChance} monster={monster} /> : null}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nfunction ItemsDrop({ items }) {\r\n    if (!Array.isArray(items)) {\r\n        items = [items];\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {items.map((item, id) => {\r\n                return (\r\n                    <li key={id}>\r\n                        <Link to={`/items#${item.name.split(' ').join('_').replace(\"'\", '_')}`}>{item.name}</Link>{' '}\r\n                        {item.onein ? `${((1 / ~~item.onein) * 100).toFixed(2).replace(/\\.0+$/, '')}%` : '100%'}\r\n                    </li>\r\n                );\r\n            })}\r\n        </>\r\n    );\r\n}\r\n\r\nfunction ItemChance({ itemChance }) {\r\n    if (!Array.isArray(itemChance)) {\r\n        itemChance = [itemChance];\r\n    }\r\n    const maxChance = itemChance.reduce((acc, cur) => acc + ~~cur.chance, 0);\r\n\r\n    return (\r\n        <>\r\n            {itemChance.map((item, id) => {\r\n                return item.chance && item.name && item.name !== 'null' ? (\r\n                    <li key={id}>\r\n                        <Link to={`/items#${item.name.split(' ').join('_').replace(\"'\", '_')}`}>{item.name}</Link>{' '}\r\n                        {`${((item.chance / maxChance) * 100).toFixed(2).replace(/\\.0+$/, '')}%`}\r\n                    </li>\r\n                ) : null;\r\n            })}\r\n        </>\r\n    );\r\n}\r\n","import React, { useContext, useEffect } from 'react';\r\n\r\nimport { DataContext } from '../context/dataContext';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport H2 from '../components/H2';\r\nimport H3 from '../components/H3';\r\nimport PageHeader from '../components/PageHeader';\r\nimport Table from '../components/Table';\r\nimport MonsterRow from '../components/Table/MonsterRow';\r\n\r\nexport default function Monsters() {\r\n    const { monsters } = useContext(DataContext);\r\n    const hash = useLocation().hash;\r\n\r\n    useEffect(() => {\r\n        if (hash && document.querySelector(hash)) {\r\n            document.querySelector(hash).scrollIntoView();\r\n        } else {\r\n            window.scrollTo(0, 0);\r\n        }\r\n    });\r\n\r\n    return (\r\n        <main className='content'>\r\n            <H2>Monsters</H2>\r\n            <PageHeader\r\n                tablaOfContent={Object.keys(monsters).reduce((acc, key) => {\r\n                    return [...acc, <a href={`#${key}`}>{key.substring(0, 1).toUpperCase() + key.substring(1)}</a>];\r\n                }, [])}\r\n            >\r\n                <p>Here is the list of all the monsters of the game</p>\r\n            </PageHeader>\r\n\r\n            {Object.keys(monsters).map((type, id) => {\r\n                return (\r\n                    <section id={type} className='anchor-Zone' key={id}>\r\n                        <H3>{type.substring(0, 1).toUpperCase() + type.substring(1)}</H3>\r\n                        <div>\r\n                            <Table\r\n                                header={['Icon', 'Name', 'Exp', 'Kingdom', 'Hp', 'Atk', 'Def', 'Cha / Ze / Ra', 'Drop', 'Location']}\r\n                                rows={MonsterRow(monsters[type], type === 'rares' ? true : false)}\r\n                            />\r\n                        </div>\r\n                    </section>\r\n                );\r\n            })}\r\n        </main>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function DungeonRows(dungeons, customData, id) {\r\n    return dungeons.reduce((acc, floor, idx) => {\r\n        if (floor.chest && !Array.isArray(floor.chest.itemChance)) {\r\n            floor.chest.itemChance = [floor.chest.itemChance];\r\n        }\r\n        const totalChestChance = floor.chest ? floor.chest.itemChance.reduce((acc, cur) => acc + ~~cur.chance, 0) : 0;\r\n\r\n        if (floor.ref && customData) {\r\n            for (const key in customData.dungeon[floor.id]) {\r\n                floor[key] = customData.dungeon[floor.id][key];\r\n            }\r\n        }\r\n\r\n        const totalMonsterChance = floor.monsterChance ? floor.monsterChance.reduce((acc, cur) => acc + ~~cur.chance, 0) : 0;\r\n\r\n        return [\r\n            ...acc,\r\n            {\r\n                id: `${id.split(' ').join('_').replace(\"'\", '_')}_F${idx + 1}`,\r\n                data: [\r\n                    `F${idx + 1}`,\r\n                    `${floor.minMonsters} / ${floor.maxMonsters}`,\r\n                    <div className='maxScroll'>\r\n                        <ul>\r\n                            {floor.monsterChance\r\n                                ? floor.monsterChance.map((monster) => {\r\n                                      if (monster.type && monster.type !== 'none') {\r\n                                          return (\r\n                                              <li key={monster.type}>\r\n                                                  <Link key={monster.type} to={`/monsters#${monster.type.split(' ').join('_')}`}>\r\n                                                      {monster.type}\r\n                                                  </Link>{' '}\r\n                                                  {`${((monster.chance / totalMonsterChance) * 100).toFixed(2).replace(/\\.0+$/, '')}%`}\r\n                                              </li>\r\n                                          );\r\n                                      } else {\r\n                                          return null;\r\n                                      }\r\n                                  })\r\n                                : null}\r\n                        </ul>\r\n                    </div>,\r\n                    floor.chest ? floor.chests : '–',\r\n                    <div className='maxScroll'>\r\n                        <ul>\r\n                            {floor.chest && floor.chest.itemChance\r\n                                ? floor.chest.itemChance.map((item) => {\r\n                                      if (item.name && item.name !== 'none') {\r\n                                          return (\r\n                                              <li key={item.name}>\r\n                                                  <Link key={item.name} to={`/items#${item.name.split(' ').join('_')}`}>\r\n                                                      {item.name}\r\n                                                  </Link>{' '}\r\n                                                  {`${((item.chance / totalChestChance) * 100).toFixed(2).replace(/\\.0+$/, '')}%`}\r\n                                              </li>\r\n                                          );\r\n                                      } else {\r\n                                          return null;\r\n                                      }\r\n                                  })\r\n                                : '–'}\r\n                        </ul>\r\n                    </div>,\r\n                    floor.legend ? <Link to={`/monsters#${floor.legend.split(' ').join('_')}`}>{floor.legend}</Link> : '–',\r\n                ],\r\n            },\r\n        ];\r\n    }, []);\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Table from './Table';\r\nimport Sprite from './Sprite';\r\n\r\nconst datas = [\r\n    [\r\n        {\r\n            name: 'Feegle',\r\n            tile: '260',\r\n            chance: '21.74',\r\n        },\r\n        {\r\n            name: 'Feegle Archer',\r\n            tile: '261',\r\n            chance: '6.52',\r\n        },\r\n        {\r\n            name: 'Squal',\r\n            tile: '269',\r\n            chance: '21.74',\r\n        },\r\n        {\r\n            name: 'Skeletal Mage',\r\n            tile: '272',\r\n            chance: '6.52',\r\n        },\r\n        {\r\n            name: 'Imp',\r\n            tile: '6',\r\n            chance: '21.74',\r\n        },\r\n        {\r\n            name: 'Imp Mage',\r\n            tile: '267',\r\n            chance: '21.74',\r\n        },\r\n    ],\r\n    [\r\n        {\r\n            name: 'Feegle',\r\n            tile: '260',\r\n            chance: '16.66',\r\n        },\r\n        {\r\n            name: 'Feegle Archer',\r\n            tile: '261',\r\n            chance: '16.66',\r\n        },\r\n        {\r\n            name: 'Squal',\r\n            tile: '269',\r\n            chance: '16.66',\r\n        },\r\n        {\r\n            name: 'Skeletal Mage',\r\n            tile: '272',\r\n            chance: '16.66',\r\n        },\r\n        {\r\n            name: 'Imp',\r\n            tile: '6',\r\n            chance: '16.66',\r\n        },\r\n        {\r\n            name: 'Imp Mage',\r\n            tile: '267',\r\n            chance: '16.66',\r\n        },\r\n    ],\r\n    [\r\n        {\r\n            name: 'Feegle',\r\n            tile: '260',\r\n            chance: '25',\r\n        },\r\n        {\r\n            name: 'Feegle Archer',\r\n            tile: '261',\r\n            chance: '25',\r\n        },\r\n        {\r\n            name: 'Undead Dwarf',\r\n            tile: '275',\r\n            chance: '25',\r\n        },\r\n        {\r\n            name: 'Dwarf Zombie',\r\n            tile: '274',\r\n            chance: '25',\r\n        },\r\n    ],\r\n    [\r\n        {\r\n            name: 'Feegle',\r\n            tile: '260',\r\n            chance: '71',\r\n        },\r\n        {\r\n            name: 'Feegle Archer',\r\n            tile: '261',\r\n            chance: '29',\r\n        },\r\n    ],\r\n    [\r\n        {\r\n            name: 'Feegle',\r\n            tile: '260',\r\n            chance: '25.91',\r\n        },\r\n        {\r\n            name: 'Feegle Archer',\r\n            tile: '261',\r\n            chance: '25.91',\r\n        },\r\n        {\r\n            name: 'Taffyne',\r\n            tile: '277',\r\n            chance: '48.18',\r\n        },\r\n    ],\r\n    [\r\n        {\r\n            name: 'Centaur',\r\n            tile: '74',\r\n            chance: '25.91',\r\n        },\r\n        {\r\n            name: 'Taffyne',\r\n            tile: '277',\r\n            chance: '48.18',\r\n        },\r\n        {\r\n            name: 'Imp Mage',\r\n            tile: '267',\r\n            chance: '25.91',\r\n        },\r\n    ],\r\n    [\r\n        {\r\n            name: 'Minotaur',\r\n            tile: '37',\r\n            chance: '32.4',\r\n        },\r\n        {\r\n            name: 'Bogie Giant',\r\n            tile: '276',\r\n            chance: '67.6',\r\n        },\r\n    ],\r\n    [\r\n        {\r\n            name: 'Imp',\r\n            tile: '6',\r\n            chance: '33.3',\r\n        },\r\n        {\r\n            name: 'White Imp',\r\n            tile: '268',\r\n            chance: '33.3',\r\n        },\r\n        {\r\n            name: 'Frost Skull',\r\n            tile: '258',\r\n            chance: '33.3',\r\n        },\r\n    ],\r\n    [\r\n        {\r\n            name: 'Skeleton King',\r\n            tile: '84',\r\n            chance: '33',\r\n        },\r\n        {\r\n            name: 'Undead Dwarf',\r\n            tile: '275',\r\n            chance: '33',\r\n        },\r\n        {\r\n            name: 'Dwarf Zombie',\r\n            tile: '274',\r\n            chance: '33',\r\n        },\r\n    ],\r\n    [\r\n        {\r\n            name: 'Skeletal Mage',\r\n            tile: '272',\r\n            chance: '21.86',\r\n        },\r\n        {\r\n            name: 'Goblin Mage',\r\n            tile: '271',\r\n            chance: '21.86',\r\n        },\r\n        {\r\n            name: 'White Imp',\r\n            tile: '268',\r\n            chance: '56.28',\r\n        },\r\n    ],\r\n];\r\n\r\nexport default function HiddenCoveMonsters() {\r\n    return datas.map((data, id) => <Card key={id} data={data} />);\r\n}\r\n\r\nfunction Card({ data }) {\r\n    return (\r\n        <Table\r\n            header={['Icon', 'Name', 'Chance']}\r\n            rows={data.map((data) => {\r\n                return {\r\n                    id: '',\r\n                    data: [\r\n                        <Sprite tile={data.tile} spriteSheet='chars' className='sprite' title={data.name} alt={data.name} />,\r\n                        <Link to={`/monsters${data.name.split(' ').join('_')}`}>{data.name}</Link>,\r\n                        data.chance + '%',\r\n                    ],\r\n                };\r\n            })}\r\n        />\r\n    );\r\n}\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\nimport H2 from '../components/H2';\r\nimport H3 from '../components/H3';\r\nimport PageHeader from '../components/PageHeader';\r\nimport Table from '../components/Table';\r\nimport DungeonRows from '../components/Table/DungeonRow';\r\nimport Sprite from '../components/Sprite';\r\nimport HiddenCoveMonsters from '../components/HiddenCoveMonsters';\r\n\r\nimport { DataContext } from '../context/dataContext';\r\nimport levelFilter from '../utils/levelFilter';\r\n\r\nexport default function Dungeons() {\r\n    const levels = useContext(DataContext).levels;\r\n    const customData = useContext(DataContext).customData;\r\n    const hash = useLocation().hash;\r\n\r\n    useEffect(() => {\r\n        if (hash && document.querySelector(hash) && hash !== '#Dungeons') {\r\n            document.querySelector(hash).scrollIntoView();\r\n        } else {\r\n            window.scrollTo(0, 0);\r\n        }\r\n    });\r\n\r\n    return (\r\n        <main className='content'>\r\n            <H2>Dungeons</H2>\r\n            <PageHeader\r\n                tablaOfContent={[\r\n                    ...levelFilter.map((filter, id) => (\r\n                        <a key={id} href={`#${filter.name.split(' ').join('_').replace(\"'\", '_')}`}>\r\n                            {filter.name}\r\n                        </a>\r\n                    )),\r\n                    <a key='hc999' href='#Passageway'>\r\n                        Passageway\r\n                    </a>,\r\n                    <a key='hc99' href='#Hidden_Cove'>\r\n                        Hidden Cove\r\n                    </a>,\r\n                ]}\r\n            >\r\n                <p>Here is the list of all the dungeons of the game.</p>\r\n                <p>When monsters total of spawn rate isn't 100%, the rest of the rate is \"no monster\"</p>\r\n            </PageHeader>\r\n            {levels\r\n                ? levelFilter.map((filter, id) => {\r\n                      return (\r\n                          <section key={id} id={filter.name.split(' ').join('_').replace(\"'\", '_')} className='anchor-Zone'>\r\n                              <H3>{filter.name.substring(0, 1).toUpperCase() + filter.name.substring(1)}</H3>\r\n                              <div>\r\n                                  <Table\r\n                                      header={['Floor', 'Monster / Room', 'Monsters', 'Max Chest / F', 'Chest', 'Legend']}\r\n                                      rows={DungeonRows(levels[filter.name], customData, filter.name)}\r\n                                  />\r\n                              </div>\r\n                          </section>\r\n                      );\r\n                  })\r\n                : null}\r\n            <section key='hc999' id='Passageway' className='anchor-Zone'>\r\n                <H3>Passageway</H3>\r\n                <div>\r\n                    <Table\r\n                        header={['Floor', 'Monsters', 'Legend']}\r\n                        rows={[\r\n                            {\r\n                                id: 'Passageway',\r\n                                data: [\r\n                                    'F1',\r\n                                    <div className='maxScroll'>\r\n                                        <ul>\r\n                                            <li>\r\n                                                <Link to={`/monsters#Blob`}>Blob</Link>{' '}\r\n                                            </li>\r\n                                            <li>\r\n                                                <Link to={`/monsters#Faca`}>Faca</Link>{' '}\r\n                                            </li>\r\n                                        </ul>\r\n                                    </div>,\r\n                                    <Link to={`/monsters#Dark_Lord`}>Dark Lord</Link>,\r\n                                ],\r\n                            },\r\n                        ]}\r\n                    />\r\n                </div>\r\n            </section>\r\n            <section key='hc99' id='Hidden_Cove' className='anchor-Zone'>\r\n                <H3>Hidden Cove</H3>\r\n                <div>\r\n                    <p>\r\n                        The Hidden Cove is the only random infinite dungeon of the game.\r\n                        <br></br>Each level, you have 10% chance to get one of theses 10 monsters sets (1 to 4 monsters / room) :\r\n                    </p>\r\n                    <div className='grid-1'>\r\n                        <HiddenCoveMonsters />\r\n                    </div>\r\n\r\n                    <p>Each 5 levels (5, 10, 15, ...), you have a random Legends from this list that also spawn :</p>\r\n\r\n                    <Table\r\n                        header={['Icon', 'Name', 'Chance']}\r\n                        rows={[\r\n                            {\r\n                                id: 'hclegend1',\r\n                                data: [\r\n                                    <Sprite tile='237' spriteSheet='chars' className='sprite' title='Giant Scorpion' alt='Giant Scorpion' />,\r\n                                    <Link to={`/monsters#Giant_Scorpion`}>Giant Scorpion</Link>,\r\n                                    '20%',\r\n                                ],\r\n                            },\r\n                            {\r\n                                id: 'hclegend2',\r\n                                data: [\r\n                                    <Sprite tile='194' spriteSheet='chars' className='sprite' title='Red Dragon' alt='Red Dragon' />,\r\n                                    <Link to={`/monsters#Red_Dragon`}>Red Dragon</Link>,\r\n                                    '20%',\r\n                                ],\r\n                            },\r\n                            {\r\n                                id: 'hclegend3',\r\n                                data: [\r\n                                    <Sprite tile='57' spriteSheet='chars' className='sprite' title='Dark Lord' alt='Dark Lord' />,\r\n                                    <Link to={`/monsters#Dark_Lord`}>Dark Lord</Link>,\r\n                                    '20%',\r\n                                ],\r\n                            },\r\n                            {\r\n                                id: 'hclegend4',\r\n                                data: [\r\n                                    <Sprite tile='257' spriteSheet='chars' className='sprite' title='Frost Demon' alt='Frost Demon' />,\r\n                                    <Link to={`/monsters#Frost_Demon`}>Frost Demon</Link>,\r\n                                    '20%',\r\n                                ],\r\n                            },\r\n                            {\r\n                                id: 'hclegend5',\r\n                                data: [\r\n                                    <Sprite tile='192' spriteSheet='chars' className='sprite' title='Green Dragon' alt='Green Dragon' />,\r\n                                    <Link to={`/monsters#Green_Dragon`}>Green Dragon</Link>,\r\n                                    '20%',\r\n                                ],\r\n                            },\r\n                        ]}\r\n                    />\r\n                    <p>List of possible drop from chests :</p>\r\n                    <Table\r\n                        header={['Icon', 'Name', 'Chance']}\r\n                        rows={[\r\n                            {\r\n                                id: 'hcchest1',\r\n                                data: [\r\n                                    <Sprite tile='127' spriteSheet='tiles' className='sprite' title='Orange Potion' alt='Orange Potion' />,\r\n                                    <Link to={`/items#Orange_Potion`}>Orange Potion</Link>,\r\n                                    '17.09%',\r\n                                ],\r\n                            },\r\n                            {\r\n                                id: 'hcchest2',\r\n                                data: [\r\n                                    <Sprite tile='126' spriteSheet='tiles' className='sprite' title='Turq Potion' alt='Turq Potion' />,\r\n                                    <Link to={`/items#Turq_Potion`}>Turq Potion</Link>,\r\n                                    '17.09%',\r\n                                ],\r\n                            },\r\n                            {\r\n                                id: 'hcchest3',\r\n                                data: [\r\n                                    <Sprite tile='100' spriteSheet='tiles' className='sprite' title='Town Portal' alt='Town Portal' />,\r\n                                    <Link to={`/items#Town_Portal`}>Town Portal</Link>,\r\n                                    '17.09%',\r\n                                ],\r\n                            },\r\n                            {\r\n                                id: 'hcchest4',\r\n                                data: [\r\n                                    <Sprite tile='78' spriteSheet='tiles' className='sprite' title='Trap' alt='Trap' />,\r\n                                    <Link to={`/items#Trap`}>Trap</Link>,\r\n                                    '17.09%',\r\n                                ],\r\n                            },\r\n                            {\r\n                                id: 'hcchest5',\r\n                                data: [\r\n                                    <Sprite tile='82' spriteSheet='tiles' className='sprite' title='Gold' alt='Gold' />,\r\n                                    <Link to={`/items#Gold`}>100 - 200 Gold</Link>,\r\n                                    '31.64%',\r\n                                ],\r\n                            },\r\n                        ]}\r\n                    />\r\n                </div>\r\n            </section>\r\n        </main>\r\n    );\r\n}\r\n","const ncpLocation = {\r\n    Leon: {\r\n        map: 'Aria_Island',\r\n        x: '53.540307',\r\n        y: '-15.820313',\r\n    },\r\n    Elder: {\r\n        map: 'Aria_Island',\r\n        x: '-47.279229',\r\n        y: '-21.445312',\r\n    },\r\n    Yoregot: {\r\n        map: 'Aria_Island',\r\n        x: '-54.977614',\r\n        y: '-35.859375',\r\n    },\r\n    Durnik: {\r\n        map: 'Aria_Island',\r\n        x: '-40.713956',\r\n        y: '10.898438',\r\n    },\r\n    Hermit: {\r\n        map: 'Aria_Island',\r\n        x: '-37.020098',\r\n        y: '163.125',\r\n    },\r\n    Necro: {\r\n        map: 'Aria_Island',\r\n        x: '-40.979898',\r\n        y: '20.039063',\r\n    },\r\n    \"K'atel\": {\r\n        map: 'Aria_Island',\r\n        x: '-1.933227',\r\n        y: '-150.292969',\r\n    },\r\n    Odin: {\r\n        map: 'Aria_Island',\r\n        x: '52.908902',\r\n        y: '-6.855469',\r\n    },\r\n    Polini: {\r\n        map: 'Aria_Island',\r\n        x: '0.703107',\r\n        y: '-141.503906',\r\n    },\r\n    Zeng: {\r\n        map: 'Aria_Island',\r\n        x: '-11.695273',\r\n        y: '97.558594',\r\n    },\r\n    Dafydd: {\r\n        map: 'Aria_Island',\r\n        x: '-49.15297',\r\n        y: '0',\r\n    },\r\n    Eski: {\r\n        map: 'Aria_Island',\r\n        x: '66.231457',\r\n        y: '-152.402344',\r\n    },\r\n    Morin: {\r\n        map: 'Aria_Island',\r\n        x: '-55.875311',\r\n        y: '-20.214844',\r\n    },\r\n    Tyan: {\r\n        map: 'Aria_Island',\r\n        x: '-24.686952',\r\n        y: '117.949219',\r\n    },\r\n    Wang: {\r\n        map: 'Aria_Island',\r\n        x: '-24.527135',\r\n        y: '98.4375',\r\n    },\r\n    Alva: {\r\n        map: 'Cennyn_Island',\r\n        x: '-41.376809',\r\n        y: '-27.070313',\r\n    },\r\n    Meaty: {\r\n        map: 'Cennyn_Island',\r\n        x: '29.840644',\r\n        y: '-107.929688',\r\n    },\r\n    King: {\r\n        map: 'Cennyn_Island',\r\n        x: '26.588527',\r\n        y: '-65.566406',\r\n    },\r\n    Ken: {\r\n        map: 'Cennyn_Island',\r\n        x: '65.07213',\r\n        y: '-12.65625',\r\n    },\r\n    Jungle: {\r\n        map: 'Cennyn_Island',\r\n        x: '54.775346',\r\n        y: '7.734375',\r\n    },\r\n    'Lord Cennyn': {\r\n        map: 'Cennyn_Island',\r\n        x: '11.005904',\r\n        y: '67.324219',\r\n    },\r\n    Mcarthur: {\r\n        map: 'Cennyn_Island',\r\n        x: '-2.284551',\r\n        y: '50.273438',\r\n    },\r\n    'Par Tak': {\r\n        map: 'Cennyn_Island',\r\n        x: '-35.746512',\r\n        y: '151.523438',\r\n    },\r\n    'Bal Die': {\r\n        map: 'Cennyn_Island',\r\n        x: '-70.436799',\r\n        y: '121.992188',\r\n    },\r\n    Samil: {\r\n        map: 'Cennyn_Island',\r\n        x: '-48.69096',\r\n        y: '-14.0625',\r\n    },\r\n    Flow: {\r\n        map: 'Cennyn_Island',\r\n        x: '-37.71859',\r\n        y: '171.914063',\r\n    },\r\n    'Chief Komba': {\r\n        map: 'Cennyn_Island',\r\n        x: '41.508577',\r\n        y: '112.851563',\r\n    },\r\n    'Goodman Durnik': {\r\n        map: 'Cennyn_Island',\r\n        x: '33.72434',\r\n        y: '112.851563',\r\n    },\r\n    Gasdan: {\r\n        map: 'Ynys_Island',\r\n        x: '-73.2267',\r\n        y: '-24.609375',\r\n    },\r\n    Ponzar: {\r\n        map: 'Ynys_Island',\r\n        x: '76.184995',\r\n        y: '-32.34375',\r\n    },\r\n    Notch: {\r\n        map: 'Ynys_Island',\r\n        x: '6.315299',\r\n        y: '83.671875',\r\n    },\r\n    Arwyn: {\r\n        map: 'Tal_Nivek_Island',\r\n        x: '53.748711',\r\n        y: '-20.390625',\r\n    },\r\n    Thicket: {\r\n        map: 'Tal_Nivek_Island',\r\n        x: '-44.087585',\r\n        y: '-119.179688',\r\n    },\r\n};\r\n\r\nexport default ncpLocation;\r\n","import React from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport ncpLocation from '../../utils/npcLocation';\r\n\r\nexport default function QuestRow(quests) {\r\n    return quests.reduce((acc, quest) => {\r\n        let target;\r\n\r\n        if (quest.title === 'Medicine Man') {\r\n            target = (\r\n                <>\r\n                    Kill{' '}\r\n                    {quest.target[0].monster.map((monster, id) => (\r\n                        <span key={id}>\r\n                            <Link to={`/monsters#${monster.split(' ').join('_').replace(\"'\", '_')}`}>{monster}</Link>{' '}\r\n                        </span>\r\n                    ))}\r\n                    in <Link to={`/world_map#${quest.target[0].name.split(' ').join('_').replace(\"'\", '_')}`}>{quest.target[0].name}</Link>{' '}\r\n                </>\r\n            );\r\n        } else {\r\n            switch (quest.target[0].type) {\r\n                case 'Dungeon':\r\n                    target = (\r\n                        <>\r\n                            Kill{' '}\r\n                            <Link to={`/monsters#${quest.target[0].monster.split(' ').join('_').replace(\"'\", '_')}`}>{quest.target[0].monster}</Link>{' '}\r\n                            in <Link to={`/dungeons#${quest.target[0].name.split(' ').join('_').replace(\"'\", '_')}`}>{quest.target[0].name}</Link>{' '}\r\n                            {quest.target[0].rdm ? `(${quest.target[0].rdm}% drop rate)` : null}\r\n                        </>\r\n                    );\r\n                    break;\r\n\r\n                case 'Npc':\r\n                    target = (\r\n                        <>\r\n                            Talk to{' '}\r\n                            {Array.isArray(quest.target[0].npc) ? (\r\n                                quest.target[0].npc.map((npc, id) => (\r\n                                    <Link key={id} to={`/world_map#i=${ncpLocation[npc].map}&x=${ncpLocation[npc].x}&y=${ncpLocation[npc].y}`}>\r\n                                        {npc}{' '}\r\n                                    </Link>\r\n                                ))\r\n                            ) : (\r\n                                <Link\r\n                                    to={`/world_map#i=${ncpLocation[quest.target[0].npc].map}&x=${ncpLocation[quest.target[0].npc].x}&y=${\r\n                                        ncpLocation[quest.target[0].npc].y\r\n                                    }`}\r\n                                >\r\n                                    {quest.target[0].npc}\r\n                                </Link>\r\n                            )}{' '}\r\n                            at {quest.target[0].name}\r\n                        </>\r\n                    );\r\n                    break;\r\n\r\n                case 'Map':\r\n                    target = (\r\n                        <>\r\n                            Kill{' '}\r\n                            <Link to={`/monsters#${quest.target[0].monster.split(' ').join('_').replace(\"'\", '_')}`}>{quest.target[0].monster}</Link>{' '}\r\n                            in <Link to={`/world_map#${quest.target[0].name.split(' ').join('_').replace(\"'\", '_')}`}>{quest.target[0].name}</Link>{' '}\r\n                            {quest.target[0].rdm ? `(${quest.target[0].rdm}% drop rate)` : null}\r\n                        </>\r\n                    );\r\n                    break;\r\n\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        return [\r\n            ...acc,\r\n            {\r\n                id: quest.title.split(' ').join('_').replace(\"'\", '_'),\r\n                data: [\r\n                    quest.level,\r\n                    quest.title,\r\n                    quest.summary,\r\n                    Array.isArray(quest.questItem) ? (\r\n                        <div className='maxScroll'>\r\n                            <ul>\r\n                                {quest.questItem.map((item, id) => (\r\n                                    <li key={id}>\r\n                                        <Link to={`/items#${item.split(' ').join('_').replace(\"'\", '_')}`}>{item}</Link>\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        </div>\r\n                    ) : quest.questItem ? (\r\n                        <Link to={`/items#${quest.questItem.split(' ').join('_').replace(\"'\", '_')}`}>{quest.questItem}</Link>\r\n                    ) : (\r\n                        '–'\r\n                    ),\r\n                    target,\r\n                    quest.title === 'The Treaty' ? (\r\n                        <>\r\n                            <p>8700 exp</p>\r\n                            <p>5000 gold</p>\r\n                            <p>\r\n                                <Link to={`/items#${'Crusader Shield'.split(' ').join('_').replace(\"'\", '_')}`}>Crusader Shield</Link> if Warrior\r\n                            </p>\r\n                            <p>\r\n                                <Link to={`/items#${'Elven Boots'.split(' ').join('_').replace(\"'\", '_')}`}>Elven Boots</Link> if Archer\r\n                            </p>\r\n                            <p>\r\n                                <Link to={`/items#${'Band of Odin'.split(' ').join('_').replace(\"'\", '_')}`}>Band of Odin</Link> if Wizard\r\n                            </p>\r\n                        </>\r\n                    ) : (\r\n                        quest.rewards.map((item, id) => {\r\n                            if (item.value !== '') {\r\n                                return (\r\n                                    <p key={id}>\r\n                                        {item.name === 'item' ? (\r\n                                            <Link to={`/items#${item.value.split(' ').join('_').replace(\"'\", '_')}`}>{item.value}</Link>\r\n                                        ) : (\r\n                                            `${item.value} ${item.name}`\r\n                                        )}\r\n                                    </p>\r\n                                );\r\n                            } else {\r\n                                return null;\r\n                            }\r\n                        })\r\n                    ),\r\n                ],\r\n            },\r\n        ];\r\n    }, []);\r\n}\r\n","import React, { useContext, useEffect } from 'react';\r\n\r\nimport { DataContext } from '../context/dataContext';\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\nimport H2 from '../components/H2';\r\nimport H3 from '../components/H3';\r\nimport PageHeader from '../components/PageHeader';\r\nimport Table from '../components/Table';\r\nimport QuestRow from '../components/Table/QuestRow';\r\n\r\nimport ncpLocation from '../utils/npcLocation';\r\n\r\nexport default function Monsters() {\r\n    const { quests } = useContext(DataContext);\r\n    const hash = useLocation().hash;\r\n\r\n    useEffect(() => {\r\n        if (hash && document.querySelector(hash)) {\r\n            document.querySelector(hash).scrollIntoView();\r\n        } else {\r\n            window.scrollTo(0, 0);\r\n        }\r\n    });\r\n\r\n    return (\r\n        <main className='content'>\r\n            {quests ? (\r\n                <>\r\n                    <H2>Quests</H2>\r\n                    <PageHeader\r\n                        tablaOfContent={quests.map(({ town }, id) => (\r\n                            <a key={id} href={`#${town.split(' ').join('_').replace(\"'\", '_')}`}>\r\n                                {town}\r\n                            </a>\r\n                        ))}\r\n                    >\r\n                        <p>List of quests</p>\r\n                    </PageHeader>\r\n                    {quests.map((quest, id) => {\r\n                        return (\r\n                            <section key={id} id={quest.town.split(' ').join('_').replace(\"'\", '_')} className='anchor-Zone'>\r\n                                <H3>{quest.town}</H3>\r\n                                <div>\r\n                                    <h4>\r\n                                        Quest giver :{' '}\r\n                                        <Link\r\n                                            to={`/world_map#i=${ncpLocation[quest.npc].map}&x=${ncpLocation[quest.npc].x}&y=${\r\n                                                ncpLocation[quest.npc].y\r\n                                            }`}\r\n                                        >\r\n                                            {quest.npc}\r\n                                        </Link>\r\n                                    </h4>\r\n                                    <Table\r\n                                        header={['Level', 'Name', 'Summary', 'Quest item', 'Description', 'Reward']}\r\n                                        rows={QuestRow(quest.quests)}\r\n                                    />\r\n                                </div>\r\n                            </section>\r\n                        );\r\n                    })}\r\n                </>\r\n            ) : null}\r\n        </main>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Table from './Table';\r\nimport Sprite from './Sprite';\r\n\r\nimport ncpLocation from '../utils/npcLocation';\r\n\r\nconst craftingData = [\r\n    {\r\n        item: { name: 'Cloak', tile: '129' },\r\n        material: [\r\n            {\r\n                item: 'Dog Pelt',\r\n                value: 10,\r\n            },\r\n            {\r\n                item: 'Gold',\r\n                value: 10,\r\n            },\r\n        ],\r\n        npc: ['Leon', 'Alva'],\r\n    },\r\n    {\r\n        item: { name: 'Longsword', tile: '87' },\r\n        material: [\r\n            {\r\n                type: 'gear',\r\n                item: 'Sword',\r\n                value: 1,\r\n            },\r\n            {\r\n                item: 'Ruby',\r\n                value: 12,\r\n            },\r\n            {\r\n                item: 'Gold',\r\n                value: 100,\r\n            },\r\n        ],\r\n        npc: ['Leon'],\r\n    },\r\n    {\r\n        item: { name: 'Composite Bow', tile: '91' },\r\n        material: [\r\n            {\r\n                type: 'gear',\r\n                item: 'Bow',\r\n                value: 2,\r\n            },\r\n            {\r\n                item: 'Gem',\r\n                value: 5,\r\n            },\r\n            {\r\n                item: 'Gold',\r\n                value: 100,\r\n            },\r\n        ],\r\n        npc: ['Leon'],\r\n    },\r\n    {\r\n        item: { name: 'Spiked Shield', tile: '53' },\r\n        material: [\r\n            {\r\n                type: 'gear',\r\n                item: 'Wooden Shield',\r\n                value: 1,\r\n            },\r\n            {\r\n                item: 'Stinger',\r\n                value: 10,\r\n            },\r\n            {\r\n                item: 'Gold',\r\n                value: 1000,\r\n            },\r\n        ],\r\n        npc: ['Meaty'],\r\n    },\r\n    {\r\n        item: { name: 'Spiked Boots', tile: '52' },\r\n        material: [\r\n            {\r\n                type: 'gear',\r\n                item: 'Boots',\r\n                value: 1,\r\n            },\r\n            {\r\n                item: 'Stinger',\r\n                value: 10,\r\n            },\r\n            {\r\n                item: 'Gold',\r\n                value: 1000,\r\n            },\r\n        ],\r\n        npc: ['Meaty'],\r\n    },\r\n    {\r\n        item: { name: 'Goif Bow', tile: '48' },\r\n        material: [\r\n            {\r\n                type: 'gear',\r\n                item: 'Bow',\r\n                value: 1,\r\n            },\r\n            {\r\n                type: 'gear',\r\n                item: 'Goif Gloves',\r\n                value: 20,\r\n            },\r\n            {\r\n                item: 'Gold',\r\n                value: 1000,\r\n            },\r\n        ],\r\n        npc: ['Meaty'],\r\n    },\r\n    {\r\n        item: { name: 'Flame Cloak', tile: '432' },\r\n        material: [\r\n            {\r\n                item: 'Dragon Horn',\r\n                value: 10,\r\n            },\r\n            {\r\n                item: 'Lion Skin',\r\n                value: 10,\r\n            },\r\n            {\r\n                item: 'Gold',\r\n                value: 20000,\r\n            },\r\n        ],\r\n        npc: ['Mcarthur'],\r\n    },\r\n    {\r\n        item: { name: 'Katana', tile: '418' },\r\n        material: [\r\n            {\r\n                item: 'Frost Claw',\r\n                value: 20,\r\n            },\r\n            {\r\n                item: 'Bone',\r\n                value: 10,\r\n            },\r\n            {\r\n                item: 'Gold',\r\n                value: 24000,\r\n            },\r\n        ],\r\n        npc: ['Mcarthur'],\r\n    },\r\n    {\r\n        item: { name: 'Ornate Bow', tile: '284' },\r\n        material: [\r\n            {\r\n                item: 'Diamond',\r\n                value: 10,\r\n            },\r\n            {\r\n                item: 'Horse Hair',\r\n                value: 15,\r\n            },\r\n            {\r\n                item: 'Gold',\r\n                value: 22000,\r\n            },\r\n        ],\r\n        npc: ['Mcarthur'],\r\n    },\r\n];\r\n\r\nexport default function Crafting() {\r\n    return (\r\n        <Table\r\n            header={['Icon', 'Name', 'Materials', 'Npc']}\r\n            rows={craftingData.reduce((acc, craft) => {\r\n                return [\r\n                    ...acc,\r\n                    {\r\n                        id: `craft-${craft.item.name}`,\r\n                        data: [\r\n                            <Sprite tile={craft.item.tile} spriteSheet='tiles' className='sprite' title={craft.item.name} alt={craft.item.name} />,\r\n                            <Link to={`/items#${craft.item.name.split(' ').join('_')}`}>{craft.item.name}</Link>,\r\n\r\n                            <div className='maxScroll'>\r\n                                <ul>\r\n                                    {craft.material.map((mat, id) => (\r\n                                        <li key={id}>\r\n                                            {mat.value}{' '}\r\n                                            {mat.type ? (\r\n                                                <Link to={`/items#${mat.item.split(' ').join('_')}`}>{mat.item}</Link>\r\n                                            ) : (\r\n                                                <Link to={`/items#${mat.item.split(' ').join('_')}`}>{mat.item}</Link>\r\n                                            )}\r\n                                        </li>\r\n                                    ))}\r\n                                </ul>\r\n                            </div>,\r\n\r\n                            <div className='maxScroll'>\r\n                                <ul>\r\n                                    {craft.npc.map((npc, id) => (\r\n                                        <li key={id}>\r\n                                            <Link to={`/world_map#i=${ncpLocation[npc].map}&x=${ncpLocation[npc].x}&y=${ncpLocation[npc].y}`}>\r\n                                                {npc}\r\n                                            </Link>\r\n                                        </li>\r\n                                    ))}\r\n                                </ul>\r\n                            </div>,\r\n                        ],\r\n                    },\r\n                ];\r\n            }, [])}\r\n        />\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Table from './Table';\r\nimport Sprite from './Sprite';\r\n\r\nconst waterFind = [\r\n    {\r\n        name: 'Boots',\r\n        type: 'gear',\r\n        chance: '1%',\r\n        tile: '202',\r\n    },\r\n    {\r\n        name: 'Gold Fish',\r\n        type: 'item',\r\n        chance: '0.8%',\r\n        tile: '240',\r\n    },\r\n    {\r\n        name: 'Merlins Cap',\r\n        type: 'gear',\r\n        chance: '0.8%',\r\n        tile: '38',\r\n    },\r\n    {\r\n        name: 'Fish Bone',\r\n        type: 'item',\r\n        chance: '0.8%',\r\n        tile: '287',\r\n    },\r\n    {\r\n        name: 'Trimmed Cloak',\r\n        type: 'gear',\r\n        chance: '0.59%',\r\n        tile: '368',\r\n    },\r\n    {\r\n        name: 'Gold Crown',\r\n        type: 'gear',\r\n        chance: '0.4%',\r\n        tile: '30',\r\n    },\r\n    {\r\n        name: 'Ring of Health',\r\n        type: 'gear',\r\n        chance: '0.4%',\r\n        tile: '159',\r\n    },\r\n    {\r\n        name: 'Goif Bow',\r\n        type: 'gear',\r\n        chance: '0.4%',\r\n        tile: '48',\r\n    },\r\n    {\r\n        name: 'Rusty Sword',\r\n        type: 'gear',\r\n        chance: '0.26%',\r\n        tile: '387',\r\n    },\r\n    {\r\n        name: 'Dirty Staff',\r\n        type: 'gear',\r\n        chance: '0.26%',\r\n        tile: '389',\r\n    },\r\n    {\r\n        name: 'Grimey Bow',\r\n        type: 'gear',\r\n        chance: '0.26%',\r\n        tile: '388',\r\n    },\r\n];\r\n\r\nexport default function Fishing() {\r\n    return (\r\n        <>\r\n            <p>\r\n                You need a <Link to='/items#Fishing_Pole'>Fishing Pole</Link> to fish in water and a <Link to='/items#Lave_Rod'>Lava Rod</Link> to\r\n                fish in lava.\r\n            </p>\r\n            <p>List of items from fishing in water :</p>\r\n            <Table\r\n                header={['Icon', 'Name', 'Chance']}\r\n                rows={[\r\n                    { id: '', data: ['–', 'Nothing', '60%'] },\r\n                    {\r\n                        id: '',\r\n                        data: [\r\n                            <Sprite tile='236' spriteSheet='tiles' className='sprite' title='Fish' alt='Fish' />,\r\n                            <Link to='/items#Fish'>Fish</Link>,\r\n                            '28%',\r\n                        ],\r\n                    },\r\n                    { id: '', data: ['–', 'Fishing Pole break', '4%'] },\r\n                    {\r\n                        id: '',\r\n                        data: [\r\n                            <Sprite tile='103' spriteSheet='chars' className='sprite' title='Water Elemental' alt='Water Elemental' />,\r\n                            <Link to='/monsters#Water_Elemental'>Water Elemental</Link>,\r\n                            '2%',\r\n                        ],\r\n                    },\r\n                    ...waterFind.reduce((acc, item) => {\r\n                        return [\r\n                            ...acc,\r\n                            {\r\n                                id: '',\r\n                                data: [\r\n                                    <Sprite tile={item.tile} spriteSheet='tiles' className='sprite' title={item.name} alt={item.name} />,\r\n                                    <Link to={`/${item.type === 'gear' ? 'items' : 'items'}#${item.name.split(' ').join('_')}`}>{item.name}</Link>,\r\n                                    item.chance,\r\n                                ],\r\n                            },\r\n                        ];\r\n                    }, []),\r\n                ]}\r\n            />\r\n            <p>List of items from fishing in lava :</p>\r\n            <Table\r\n                header={['Icon', 'Name', 'Chance']}\r\n                rows={[\r\n                    { id: '', data: ['–', 'Nothing', '66%'] },\r\n                    {\r\n                        id: '',\r\n                        data: [\r\n                            <Sprite tile='384' spriteSheet='tiles' className='sprite' title='Lava Fish' alt='Lava Fish' />,\r\n                            <Link to='/items#Lava_Fish'>Lava Fish</Link>,\r\n                            '15%',\r\n                        ],\r\n                    },\r\n                    {\r\n                        id: '',\r\n                        data: [\r\n                            <Sprite tile='385' spriteSheet='tiles' className='sprite' title='Fire Fish' alt='Fire Fish' />,\r\n                            <Link to='/items#Fire_Fish'>Fire Fish</Link>,\r\n                            '15%',\r\n                        ],\r\n                    },\r\n                    {\r\n                        id: '',\r\n                        data: [\r\n                            <Sprite tile='102' spriteSheet='chars' className='sprite' title='Fire Elemental' alt='Fire Elemental' />,\r\n                            <Link to='/monsters#Fire_Elemental'>Fire Elemental</Link>,\r\n                            '4%',\r\n                        ],\r\n                    },\r\n                ]}\r\n            />\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Table from './Table';\r\nimport Sprite from './Sprite';\r\n\r\nconst digFind = [\r\n    {\r\n        name: 'Diamond',\r\n        type: 'item',\r\n        chance: '1.59%',\r\n        tile: '28',\r\n    },\r\n    {\r\n        name: 'Cabbage',\r\n        type: 'item',\r\n        chance: '1.59%',\r\n        tile: '264',\r\n    },\r\n    {\r\n        name: 'Statue',\r\n        type: 'item',\r\n        chance: '0.9%',\r\n        tile: '142',\r\n    },\r\n    {\r\n        name: 'Totem',\r\n        type: 'item',\r\n        chance: '0.58%',\r\n        tile: '141',\r\n    },\r\n    {\r\n        name: 'Viking Helm',\r\n        type: 'gear',\r\n        chance: '0.32%',\r\n        tile: '41',\r\n    },\r\n    {\r\n        name: 'Bandit Shiv',\r\n        type: 'gear',\r\n        chance: '0.32%',\r\n        tile: '44',\r\n    },\r\n    {\r\n        name: 'Gold Crown',\r\n        type: 'gear',\r\n        chance: '0.16%',\r\n        tile: '30',\r\n    },\r\n    {\r\n        name: 'Club',\r\n        type: 'gear',\r\n        chance: '0.16%',\r\n        tile: '380',\r\n    },\r\n    {\r\n        name: 'Rusty Sword',\r\n        type: 'gear',\r\n        chance: '0.1%',\r\n        tile: '387',\r\n    },\r\n    {\r\n        name: 'Dirty Staff',\r\n        type: 'gear',\r\n        chance: '0.1%',\r\n        tile: '389',\r\n    },\r\n    {\r\n        name: 'Grimey Bow',\r\n        type: 'gear',\r\n        chance: '0.1%',\r\n        tile: '388',\r\n    },\r\n    {\r\n        name: 'Gilt Shield',\r\n        type: 'gear',\r\n        chance: '0.07%',\r\n        tile: '55',\r\n    },\r\n    {\r\n        name: 'Mystic Orb',\r\n        type: 'item',\r\n        chance: '0.01%',\r\n        tile: '182',\r\n    },\r\n];\r\n\r\nexport default function Digging() {\r\n    return (\r\n        <>\r\n            <p>\r\n                You need a <Link to='/items#Spade'>Spade</Link> to dig.\r\n            </p>\r\n            <p>List of items from digging :</p>\r\n            <Table\r\n                header={['Icon', 'Name', 'Chance']}\r\n                rows={[\r\n                    { id: '', data: ['–', 'Nothing', '61%'] },\r\n                    {\r\n                        id: '',\r\n                        data: [\r\n                            <Sprite tile='82' spriteSheet='tiles' className='sprite' title='Gold' alt='Gold' />,\r\n                            <>\r\n                                5 - 14 <Link to='/items#Gold'>Gold</Link>\r\n                            </>,\r\n                            '28%',\r\n                        ],\r\n                    },\r\n                    { id: '', data: ['–', 'Spade break', '4%'] },\r\n                    ...digFind.reduce((acc, item) => {\r\n                        return [\r\n                            ...acc,\r\n                            {\r\n                                id: '',\r\n                                data: [\r\n                                    <Sprite tile={item.tile} spriteSheet='tiles' className='sprite' title={item.name} alt={item.name} />,\r\n                                    <Link to={`/${item.type === 'gear' ? 'items' : 'items'}#${item.name.split(' ').join('_')}`}>{item.name}</Link>,\r\n                                    item.chance,\r\n                                ],\r\n                            },\r\n                        ];\r\n                    }, []),\r\n                ]}\r\n            />\r\n            <p>List of items from fishing in lava :</p>\r\n            <Table\r\n                header={['Icon', 'Name', 'Chance']}\r\n                rows={[\r\n                    { id: '', data: ['–', 'Nothing', '66%'] },\r\n                    {\r\n                        id: '',\r\n                        data: [\r\n                            <Sprite tile='384' spriteSheet='tiles' className='sprite' title='Lava Fish' alt='Lava Fish' />,\r\n                            <Link to='/items#Lava_Fish'>Lava Fish</Link>,\r\n                            '15%',\r\n                        ],\r\n                    },\r\n                    {\r\n                        id: '',\r\n                        data: [\r\n                            <Sprite tile='385' spriteSheet='tiles' className='sprite' title='Fire Fish' alt='Fire Fish' />,\r\n                            <Link to='/items#Fire_Fish'>Fire Fish</Link>,\r\n                            '15%',\r\n                        ],\r\n                    },\r\n                    {\r\n                        id: '',\r\n                        data: [\r\n                            <Sprite tile='102' spriteSheet='chars' className='sprite' title='Fire Elemental' alt='Fire Elemental' />,\r\n                            <Link to='/monsters#Fire_Elemental'>Fire Elemental</Link>,\r\n                            '4%',\r\n                        ],\r\n                    },\r\n                ]}\r\n            />\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Table from './Table';\r\nimport Sprite from './Sprite';\r\n\r\nconst finds = [\r\n    {\r\n        name: 'Totem',\r\n        type: 'item',\r\n        chance: '60%',\r\n        tile: '141',\r\n    },\r\n    {\r\n        name: 'Gem',\r\n        type: 'item',\r\n        chance: '60%',\r\n        tile: '163',\r\n    },\r\n    {\r\n        name: 'Hatchet',\r\n        type: 'gear',\r\n        chance: '10%',\r\n        tile: '280',\r\n    },\r\n    {\r\n        name: 'Rusty Sword',\r\n        type: 'gear',\r\n        chance: '10%',\r\n        tile: '387',\r\n    },\r\n    {\r\n        name: 'Dirty Staff',\r\n        type: 'gear',\r\n        chance: '10%',\r\n        tile: '389',\r\n    },\r\n    {\r\n        name: 'Grimey Bow',\r\n        type: 'gear',\r\n        chance: '10%',\r\n        tile: '388',\r\n    },\r\n];\r\n\r\nexport default function Finding() {\r\n    return (\r\n        <>\r\n            <p>By interacting with any furniture (table, statue, bookcase, ...), you have a 3.33% to find an item of this list.</p>\r\n            <Table\r\n                header={['Icon', 'Name', 'Chance']}\r\n                rows={[\r\n                    ...finds.reduce((acc, item) => {\r\n                        return [\r\n                            ...acc,\r\n                            {\r\n                                id: '',\r\n                                data: [\r\n                                    <Sprite tile={item.tile} spriteSheet='tiles' className='sprite' title={item.name} alt={item.name} />,\r\n                                    <Link to={`/${item.type === 'gear' ? 'items' : 'items'}#${item.name.split(' ').join('_')}`}>{item.name}</Link>,\r\n                                    item.chance,\r\n                                ],\r\n                            },\r\n                        ];\r\n                    }, []),\r\n                ]}\r\n            />\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Table from './Table';\r\n\r\nconst tMaps = [\r\n    {\r\n        level: 2,\r\n        cost: 100,\r\n        desc: 'The map shows Aria town',\r\n        reward: ['Spire Dagger', 'Gold'],\r\n        gold: 1000,\r\n        map: 'Aria_Island',\r\n        x: '-43.961191',\r\n        y: '-18.632813',\r\n    },\r\n    {\r\n        level: 4,\r\n        cost: 1000,\r\n        desc: 'The map shows Aria town',\r\n        reward: ['Gold Ring', 'Gold'],\r\n        gold: 1000,\r\n        map: 'Aria_Island',\r\n        x: '-43.834527',\r\n        y: '-40.78125',\r\n    },\r\n    {\r\n        level: 5,\r\n        cost: 200,\r\n        desc: 'The map shows the graveyard',\r\n        reward: ['Bone Staff', 'Spiked Flail', 'Ridged Dagger', 'Gold'],\r\n        gold: 2000,\r\n        map: 'Aria_Island',\r\n        x: '-68.656555',\r\n        y: '-24.609375',\r\n    },\r\n    {\r\n        level: 8,\r\n        cost: 500,\r\n        desc: 'The map shows the desert valley',\r\n        reward: ['Viking Helm', 'Capped Boots', 'Gold'],\r\n        gold: 2000,\r\n        map: 'Aria_Island',\r\n        x: '2.460181',\r\n        y: '-95.976563',\r\n    },\r\n    {\r\n        level: 14,\r\n        cost: 1000,\r\n        desc: 'The map shows the wilderness',\r\n        reward: ['Ice Shards', 'Gold'],\r\n        gold: 3000,\r\n        map: 'Aria_Island',\r\n        x: '6.664608',\r\n        y: '-38.671875',\r\n    },\r\n    {\r\n        level: 19,\r\n        cost: 2000,\r\n        desc: 'The map shows the snowy wastes',\r\n        reward: ['Opal Wand', 'Gold'],\r\n        gold: 4000,\r\n        map: 'Aria_Island',\r\n        x: '54.572062',\r\n        y: '-149.0625',\r\n    },\r\n    {\r\n        level: 26,\r\n        cost: 4000,\r\n        desc: 'The map shows the beach',\r\n        reward: ['Knights Shield', 'Gold'],\r\n        gold: 5000,\r\n        map: 'Cennyn_Island',\r\n        x: '-15.45368',\r\n        y: '-102.304687',\r\n    },\r\n    {\r\n        level: 30,\r\n        cost: 1000,\r\n        desc: 'The map shows the snowy wastes near Nordolk',\r\n        reward: ['Long Shield', 'Gold'],\r\n        gold: 3000,\r\n        map: 'Aria_Island',\r\n        x: '61.606396',\r\n        y: '-91.40625',\r\n    },\r\n    {\r\n        level: 55,\r\n        cost: 2000,\r\n        desc: 'The map shows the east gate of Toronega',\r\n        reward: ['Phoenix Blade', 'Gold'],\r\n        gold: 5000,\r\n        map: 'Cennyn_Island',\r\n        x: '33.72434',\r\n        y: '-25.136719',\r\n    },\r\n    {\r\n        level: 65,\r\n        cost: 5000,\r\n        desc: 'The map shows the jungle',\r\n        reward: ['Fire Shield', 'Gold'],\r\n        gold: 10000,\r\n        map: 'Cennyn_Island',\r\n        x: '65.802776',\r\n        y: '33.398438',\r\n    },\r\n];\r\n\r\nexport default function Crafting() {\r\n    return (\r\n        <Table\r\n            header={['Level', 'Cost', 'Description', 'Reward', 'Location']}\r\n            rows={tMaps.reduce((acc, tMap) => {\r\n                return [\r\n                    ...acc,\r\n                    {\r\n                        id: ``,\r\n                        data: [\r\n                            tMap.level,\r\n                            tMap.cost,\r\n                            tMap.desc,\r\n                            <div className='maxScroll'>\r\n                                <ul>\r\n                                    {tMap.reward.map((item, id) => {\r\n                                        return (\r\n                                            <li key={id}>\r\n                                                {item === 'Gold' ? `${tMap.gold} ` : null}\r\n                                                <Link to={`/items#${item.split(' ').join('_')}`}>{item}</Link>\r\n                                            </li>\r\n                                        );\r\n                                    })}\r\n                                </ul>\r\n                            </div>,\r\n                            <Link to={`/world_map#i=${tMap.map}&x=${tMap.x}&y=${tMap.y}`}>Click to see on map</Link>,\r\n                        ],\r\n                    },\r\n                ];\r\n            }, [])}\r\n        />\r\n    );\r\n}\r\n","import React, { useEffect } from 'react';\r\n\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\nimport H2 from '../components/H2';\r\nimport H3 from '../components/H3';\r\nimport PageHeader from '../components/PageHeader';\r\n\r\nimport Crafting from '../components/Crafting.js';\r\nimport Fishing from '../components/Fishing.js';\r\nimport Digging from '../components/Digging.js';\r\nimport Finding from '../components/Finding.js';\r\nimport TMaps from '../components/TMaps.js';\r\n\r\nexport default function Activities() {\r\n    const hash = useLocation().hash;\r\n\r\n    useEffect(() => {\r\n        if (hash && document.querySelector(hash) && hash !== '#Dungeons') {\r\n            document.querySelector(hash).scrollIntoView();\r\n        } else {\r\n            window.scrollTo(0, 0);\r\n        }\r\n    });\r\n\r\n    return (\r\n        <main className='content'>\r\n            <H2>Activities</H2>\r\n            <PageHeader\r\n                tablaOfContent={['repairing', 'crafting', 'treasure maps', 'digging', 'fishing', 'finding'].reduce((acc, item) => {\r\n                    return [...acc, <a href={`#${item.split(' ').join('_')}`}>{item.substring(0, 1).toUpperCase() + item.substring(1)}</a>];\r\n                }, [])}\r\n            ></PageHeader>\r\n            <section id='repairing' className='anchor-Zone'>\r\n                <H3>Repairing</H3>\r\n                <div>\r\n                    <p>\r\n                        You can spend 5000 <Link to='/items#Gold'>Gold</Link> and a <Link to='/items#Rusty_Sword'>Rusty Sword</Link> /{' '}\r\n                        <Link to='/items#Dirty_Staff'>Dirty Staff</Link> / <Link to='/items#Grimey_Bow'>Grimey Bow</Link> at any gears seller.\r\n                    </p>\r\n                    <p>It will produce a random weapon of the same type from level 0 to [your_level * 0.8].</p>\r\n                </div>\r\n            </section>\r\n            <section id='crafting' className='anchor-Zone'>\r\n                <H3>Crafting</H3>\r\n                <div>\r\n                    <Crafting />\r\n                </div>\r\n            </section>\r\n            <section id='treasure_maps' className='anchor-Zone'>\r\n                <H3>Treasure maps</H3>\r\n                <div>\r\n                    <TMaps />\r\n                </div>\r\n            </section>\r\n            <section id='digging' className='anchor-Zone'>\r\n                <H3>Digging</H3>\r\n                <div>\r\n                    <Digging />\r\n                </div>\r\n            </section>\r\n            <section id='fishing' className='anchor-Zone'>\r\n                <H3>Fishing</H3>\r\n                <div>\r\n                    <Fishing />\r\n                </div>\r\n            </section>\r\n            <section id='finding' className='anchor-Zone'>\r\n                <H3>Finding</H3>\r\n                <div>\r\n                    <Finding />\r\n                </div>\r\n            </section>\r\n        </main>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Table from './Table';\r\nimport Sprite from './Sprite';\r\n\r\nconst shops = [\r\n    {\r\n        name: 'Dagger',\r\n        tile: 180,\r\n        cost: 300,\r\n        towns: ['Aria', \"S'thel\", 'Dondheim', 'Gombard', 'Nordolk'],\r\n    },\r\n    {\r\n        name: 'Sword',\r\n        tile: 86,\r\n        cost: 300,\r\n        towns: ['Aria', 'Gombard', 'Nordolk'],\r\n    },\r\n    {\r\n        name: 'Cloak',\r\n        tile: 129,\r\n        cost: 50,\r\n        towns: ['Aria', \"S'thel\", 'Dondheim'],\r\n    },\r\n    {\r\n        name: 'Bow',\r\n        tile: 90,\r\n        cost: 300,\r\n        towns: ['Aria', 'Gombard', 'Nordolk'],\r\n    },\r\n    {\r\n        name: 'Boots',\r\n        tile: 202,\r\n        cost: 1000,\r\n        towns: ['Aria', \"S'thel\", 'Dondheim', 'Gombard', 'Nordolk'],\r\n    },\r\n    {\r\n        name: 'Robes',\r\n        tile: 115,\r\n        cost: 600,\r\n        towns: ['Aria', 'Gombard', 'Nordolk'],\r\n    },\r\n    {\r\n        name: 'Staff',\r\n        tile: 94,\r\n        cost: 300,\r\n        towns: ['Aria', \"S'thel\", 'Dondheim', 'Gombard', 'Nordolk'],\r\n    },\r\n    {\r\n        name: 'Bone Staff',\r\n        tile: 231,\r\n        cost: 800,\r\n        towns: ['Aria', 'Durnik'],\r\n    },\r\n    {\r\n        name: 'Long Bow',\r\n        tile: 224,\r\n        cost: 600,\r\n        towns: [\r\n            'Aria',\r\n            \"S'thel\",\r\n            'Dondheim',\r\n            'Gombard',\r\n            'Nordolk',\r\n            'Toronega',\r\n            'Thule',\r\n            'Naleg',\r\n            'Tal Mita',\r\n            'Kor',\r\n            'Ynys',\r\n            'Tal Nivek',\r\n            'Airlon',\r\n            'Thicket',\r\n        ],\r\n    },\r\n    {\r\n        name: 'Ridged Dagger',\r\n        tile: 226,\r\n        cost: 350,\r\n        towns: ['Aria', \"S'thel\", 'Dondheim', 'Gombard'],\r\n    },\r\n    {\r\n        name: 'Wooden Shield',\r\n        tile: 183,\r\n        cost: 400,\r\n        towns: ['Aria', \"S'thel\", 'Dondheim', 'Gombard', 'Nordolk', 'Toronega'],\r\n    },\r\n    {\r\n        name: 'Leather Armor',\r\n        tile: 165,\r\n        cost: 500,\r\n        towns: ['Aria', 'Dondheim', 'Gombard', 'Nordolk', 'Toronega'],\r\n    },\r\n    {\r\n        name: 'Longsword',\r\n        tile: 87,\r\n        cost: 800,\r\n        towns: [\r\n            'Aria',\r\n            \"S'thel\",\r\n            'Dondheim',\r\n            'Gombard',\r\n            'Nordolk',\r\n            'Toronega',\r\n            'Paititi',\r\n            'Thule',\r\n            'Cennyn',\r\n            'Naleg',\r\n            'Tal Mita',\r\n            'Kor',\r\n            'Ynys',\r\n            'Tal Nivek',\r\n            'Airlon',\r\n            'Thicket',\r\n        ],\r\n    },\r\n    {\r\n        name: 'Chainmail',\r\n        tile: 169,\r\n        cost: 7000,\r\n        towns: [\r\n            'Aria',\r\n            \"S'thel\",\r\n            'Dondheim',\r\n            'Gombard',\r\n            'Nordolk',\r\n            'Toronega',\r\n            'Paititi',\r\n            'Thule',\r\n            'Cennyn',\r\n            'Naleg',\r\n            'Tal Mita',\r\n            'Kor',\r\n            'Ynys',\r\n            'Tal Nivek',\r\n            'Airlon',\r\n            'Thicket',\r\n        ],\r\n    },\r\n    {\r\n        name: 'Scalemail',\r\n        tile: 167,\r\n        cost: 12800,\r\n        towns: [\r\n            'Aria',\r\n            \"S'thel\",\r\n            'Dondheim',\r\n            'Gombard',\r\n            'Nordolk',\r\n            'Toronega',\r\n            'Paititi',\r\n            'Thule',\r\n            'Cennyn',\r\n            'Naleg',\r\n            'Tal Mita',\r\n            'Kor',\r\n            'Ynys',\r\n            'Tal Nivek',\r\n            'Airlon',\r\n            'Thicket',\r\n        ],\r\n    },\r\n    {\r\n        name: 'Composite Bow',\r\n        tile: 91,\r\n        cost: 4850,\r\n        towns: [\r\n            'Aria',\r\n            \"S'thel\",\r\n            'Dondheim',\r\n            'Gombard',\r\n            'Nordolk',\r\n            'Toronega',\r\n            'Paititi',\r\n            'Thule',\r\n            'Cennyn',\r\n            'Naleg',\r\n            'Tal Mita',\r\n            'Kor',\r\n            'Ynys',\r\n            'Tal Nivek',\r\n            'Airlon',\r\n        ],\r\n    },\r\n    {\r\n        name: 'Shimmering Shield',\r\n        tile: 186,\r\n        cost: 11000,\r\n        towns: ['Aria', 'Gombard', 'Nordolk'],\r\n    },\r\n    {\r\n        name: 'Fire Arrow',\r\n        tile: 110,\r\n        cost: 30,\r\n        towns: ['Aria', \"S'thel\", 'Gombard'],\r\n    },\r\n    {\r\n        name: 'Pelt Cloak',\r\n        tile: 131,\r\n        cost: 1500,\r\n        requirement: 'Pelting Them',\r\n        towns: ['Aria'],\r\n    },\r\n    {\r\n        name: 'Sandals of Hoff',\r\n        tile: 370,\r\n        cost: 3000,\r\n        requirement: 'Behold!',\r\n        towns: ['Aria'],\r\n    },\r\n    {\r\n        name: 'Curved Sword',\r\n        tile: 360,\r\n        cost: 87500,\r\n        requirement: 'Nasty Sting',\r\n        towns: ['Aria'],\r\n    },\r\n    {\r\n        name: 'Conical Helmet',\r\n        tile: 339,\r\n        cost: 11000,\r\n        requirement: 'Making a Stand',\r\n        towns: ['Aria'],\r\n    },\r\n    {\r\n        name: 'Chaos Spear',\r\n        tile: 379,\r\n        cost: 111500,\r\n        requirement: 'Portrait of Purity',\r\n        towns: ['Aria'],\r\n    },\r\n    {\r\n        name: 'Knee High Boots',\r\n        tile: 51,\r\n        cost: 2000,\r\n        towns: [\"S'thel\"],\r\n    },\r\n    {\r\n        name: 'Steel Shield',\r\n        tile: 185,\r\n        cost: 1000,\r\n        towns: [\"S'thel\"],\r\n    },\r\n    {\r\n        name: 'Kite Shield',\r\n        tile: 6,\r\n        cost: 26000,\r\n        towns: [\"S'thel\"],\r\n    },\r\n    {\r\n        name: 'Head Dress',\r\n        tile: 371,\r\n        cost: 3400,\r\n        requirement: 'The Evil Beneath',\r\n        towns: [\"S'thel\"],\r\n    },\r\n    {\r\n        name: 'Diamond Knife',\r\n        tile: 363,\r\n        cost: 47800,\r\n        requirement: 'Smashing Ice Cubes',\r\n        towns: [\"S'thel\"],\r\n    },\r\n    {\r\n        name: 'Troll Club',\r\n        tile: 348,\r\n        cost: 97500,\r\n        requirement: 'Slithering Evil',\r\n        towns: [\"S'thel\"],\r\n    },\r\n    {\r\n        name: 'Prong Tome',\r\n        tile: 369,\r\n        cost: 32000,\r\n        requirement: 'Dragons Egg Delivery',\r\n        towns: [\"S'thel\"],\r\n    },\r\n    {\r\n        name: 'Tiger Cloak',\r\n        tile: 336,\r\n        cost: 73500,\r\n        requirement: 'Light the Way',\r\n        towns: [\"S'thel\"],\r\n    },\r\n    {\r\n        name: 'Spiked Shield',\r\n        tile: 53,\r\n        cost: 36000,\r\n        towns: ['Dondheim'],\r\n    },\r\n    {\r\n        name: 'Mighty Axe',\r\n        tile: 204,\r\n        cost: 800,\r\n        towns: ['Dondheim'],\r\n    },\r\n    {\r\n        name: 'Iron Helm',\r\n        tile: 193,\r\n        cost: 7000,\r\n        towns: ['Dondheim'],\r\n    },\r\n    {\r\n        name: 'Canabe Cloak',\r\n        tile: 128,\r\n        cost: 23500,\r\n        towns: ['Dondheim'],\r\n    },\r\n    {\r\n        name: 'Templar Armor',\r\n        tile: 166,\r\n        cost: 13500,\r\n        towns: ['Dondheim'],\r\n    },\r\n    {\r\n        name: 'Frost Arrow',\r\n        tile: 111,\r\n        cost: 50,\r\n        towns: ['Dondheim', 'Nordolk'],\r\n    },\r\n    {\r\n        name: 'Stinger Sword',\r\n        tile: 206,\r\n        cost: 11500,\r\n        requirement: 'It Stings!',\r\n        towns: ['Dondheim'],\r\n    },\r\n    {\r\n        name: 'Cowled Robes',\r\n        tile: 357,\r\n        cost: 53500,\r\n        requirement: 'Snakes Alive',\r\n        towns: ['Dondheim'],\r\n    },\r\n    {\r\n        name: 'Flinger',\r\n        tile: 377,\r\n        cost: 22600,\r\n        requirement: 'Ghoul Hunt',\r\n        towns: ['Dondheim'],\r\n    },\r\n    {\r\n        name: 'Swamp Gloves',\r\n        tile: 375,\r\n        cost: 14500,\r\n        requirement: 'Seedy Business',\r\n        towns: ['Dondheim'],\r\n    },\r\n    {\r\n        name: 'Red Stone Sceptre',\r\n        tile: 378,\r\n        cost: 92000,\r\n        requirement: 'Medcinial Hope',\r\n        towns: ['Dondheim'],\r\n    },\r\n    {\r\n        name: 'Goif Gloves',\r\n        tile: 146,\r\n        cost: 13500,\r\n        requirement: 'Lost Child',\r\n        towns: ['Gombard'],\r\n    },\r\n    {\r\n        name: 'Hunter Knife',\r\n        tile: 227,\r\n        cost: 10800,\r\n        towns: ['Durnik', 'Nordolk', 'Toronega', 'Thule', 'Cennyn', 'Naleg', 'Tal Mita', 'Kor', 'Ynys', 'Tal Nivek', 'Airlon', 'Thicket'],\r\n    },\r\n\r\n    {\r\n        name: 'Sickle',\r\n        tile: 229,\r\n        cost: 47800,\r\n        towns: ['Durnik'],\r\n    },\r\n    {\r\n        name: 'Dark Staff',\r\n        tile: 233,\r\n        cost: 46800,\r\n        towns: ['Durnik'],\r\n    },\r\n    {\r\n        name: 'Ring of Health',\r\n        tile: 159,\r\n        cost: 18500,\r\n        towns: ['Hermit'],\r\n    },\r\n    {\r\n        name: 'Task Spear',\r\n        tile: 203,\r\n        cost: 31500,\r\n        towns: ['Hermit'],\r\n    },\r\n    {\r\n        name: 'Shimmering Helm',\r\n        tile: 23,\r\n        cost: 21000,\r\n        towns: ['Hermit'],\r\n    },\r\n    {\r\n        name: 'Infused Robes',\r\n        tile: 113,\r\n        cost: 33500,\r\n        towns: ['Hermit'],\r\n    },\r\n\r\n    {\r\n        name: 'Lined Boots',\r\n        tile: 354,\r\n        cost: 8000,\r\n        requirement: 'The Mighty Horn',\r\n        towns: ['Nordolk'],\r\n    },\r\n    {\r\n        name: 'Magicians Tunic',\r\n        tile: 287,\r\n        cost: 83500,\r\n        requirement: 'Cull the Magic',\r\n        towns: ['Nordolk'],\r\n    },\r\n    {\r\n        name: 'Book of Majesty',\r\n        tile: 321,\r\n        cost: 65000,\r\n        requirement: 'Blood of the Elders',\r\n        towns: ['Nordolk'],\r\n    },\r\n    {\r\n        name: 'Shadow Boots',\r\n        tile: 338,\r\n        cost: 48000,\r\n        requirement: 'Newt Replacement',\r\n        towns: ['Nordolk'],\r\n    },\r\n    {\r\n        name: 'Spiked Club',\r\n        tile: 364,\r\n        cost: 19800,\r\n        requirement: 'Chaos Mages Unite',\r\n        towns: ['Nordolk'],\r\n    },\r\n    {\r\n        name: 'Explosion Arrow',\r\n        tile: 10,\r\n        cost: 75,\r\n        towns: ['Toronega', 'Paititi', 'Thule', 'Cennyn', 'Naleg', 'Tal Mita', 'Kor', 'Ynys', 'Tal Nivek', 'Airlon', 'Thicket'],\r\n    },\r\n    {\r\n        name: 'Lined Cap',\r\n        tile: 355,\r\n        cost: 7000,\r\n        requirement: '3 wishes',\r\n        towns: ['Toronega'],\r\n    },\r\n    {\r\n        name: 'Mustard Tome',\r\n        tile: 353,\r\n        cost: 45000,\r\n        requirement: 'Creepers Peepers',\r\n        towns: ['Toronega'],\r\n    },\r\n    {\r\n        name: 'Juganaught Plate',\r\n        tile: 358,\r\n        cost: 67500,\r\n        requirement: 'Jar of Wisps',\r\n        towns: ['Toronega'],\r\n    },\r\n    {\r\n        name: 'Clawed Gloves',\r\n        tile: 343,\r\n        cost: 63500,\r\n        requirement: 'The Labyrinth',\r\n        towns: ['Toronega'],\r\n    },\r\n    {\r\n        name: 'Lava Rod',\r\n        tile: 319,\r\n        cost: 5000,\r\n        requirement: 'Dragon Bashing',\r\n        towns: ['Toronega'],\r\n    },\r\n    {\r\n        name: 'Harp Bow',\r\n        tile: 272,\r\n        cost: 83600,\r\n        towns: ['Jungle', 'Paititi'],\r\n    },\r\n    {\r\n        name: 'Lion Blade',\r\n        tile: 13,\r\n        cost: 87500,\r\n        towns: ['Paititi', 'Naleg', 'Tal Mita', 'Kor', 'Ynys', 'Tal Nivek', 'Airlon'],\r\n    },\r\n    {\r\n        name: 'Lightning Shield',\r\n        tile: 266,\r\n        cost: 72000,\r\n        towns: ['Thule', 'Cennyn'],\r\n    },\r\n];\r\nexport default function GearsShops() {\r\n    return (\r\n        <Table\r\n            header={['Icon', 'Name', 'Price', 'Location', 'Requirement']}\r\n            rows={shops.reduce((acc, item) => {\r\n                return [\r\n                    ...acc,\r\n                    {\r\n                        id: item.name.split(' ').join('_'),\r\n                        data: [\r\n                            <Sprite tile={item.tile} spriteSheet='tiles' className='sprite' title={item.name} alt={item.name} />,\r\n                            <Link to={`/items#${item.name.split(' ').join('_')}`}>{item.name}</Link>,\r\n                            item.cost,\r\n                            <div className='maxScroll'>\r\n                                <ul>\r\n                                    {item.towns.map((town, id) => (\r\n                                        <li key={id}>{town}</li>\r\n                                    ))}\r\n                                </ul>\r\n                            </div>,\r\n                            item.requirement ? (\r\n                                <>\r\n                                    Complete <Link to={`/quests#${item.requirement.split(' ').join('_')}`}>{item.requirement}</Link>\r\n                                </>\r\n                            ) : (\r\n                                '–'\r\n                            ),\r\n                        ],\r\n                    },\r\n                ];\r\n            }, [])}\r\n        />\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Table from './Table';\r\nimport Sprite from './Sprite';\r\n\r\nconst shops = [\r\n    {\r\n        name: 'Attack Elixir',\r\n        tile: 76,\r\n        cost: 150000,\r\n        towns: ['Dondheim'],\r\n    },\r\n    {\r\n        name: 'Defence Elixir',\r\n        tile: 77,\r\n        cost: 150000,\r\n        towns: [\"S'thel\"],\r\n    },\r\n\r\n    {\r\n        name: 'Protect',\r\n        tile: 123,\r\n        cost: 2000,\r\n        towns: ['Aria'],\r\n    },\r\n\r\n    {\r\n        name: 'Flashbang',\r\n        tile: 99,\r\n        cost: 2000,\r\n        towns: ['Aria'],\r\n    },\r\n    {\r\n        name: 'Frost Bolt',\r\n        tile: 107,\r\n        cost: 2200,\r\n        towns: ['Dondheim'],\r\n    },\r\n    {\r\n        name: 'Freeze',\r\n        tile: 122,\r\n        cost: 3000,\r\n        towns: ['Aria', 'Dondheim', 'Gombard'],\r\n    },\r\n    {\r\n        name: 'Teleport',\r\n        tile: 105,\r\n        cost: 4000,\r\n        towns: ['Aria', 'Gombard'],\r\n    },\r\n\r\n    {\r\n        name: 'Greater Heal',\r\n        tile: 103,\r\n        cost: 2500,\r\n        towns: [\"S'thel\"],\r\n    },\r\n\r\n    {\r\n        name: 'Drain',\r\n        tile: 313,\r\n        cost: 6000,\r\n        towns: ['Thule', 'Cennyn', 'Naleg', 'Tal Mita', 'Kor', 'Ynys', 'Tal Nivek', 'Airlon'],\r\n    },\r\n    {\r\n        name: 'Move',\r\n        tile: 119,\r\n        cost: 6000,\r\n        towns: ['Dondheim'],\r\n    },\r\n\r\n    {\r\n        name: 'Cure',\r\n        tile: 316,\r\n        cost: 12000,\r\n        towns: [\"S'thel\", 'Gombard', 'Nordolk', 'Paititi'],\r\n    },\r\n\r\n    {\r\n        name: 'Explosion',\r\n        tile: 109,\r\n        cost: 8000,\r\n        towns: [\"S'thel\"],\r\n    },\r\n\r\n    {\r\n        name: 'Magic Missile',\r\n        tile: 108,\r\n        cost: 28000,\r\n        towns: ['Nordolk', 'Toronega', 'Paititi', 'Thule', 'Cennyn', 'Naleg', 'Tal Mita', 'Kor', 'Ynys', 'Tal Nivek', 'Airlon'],\r\n    },\r\n\r\n    {\r\n        name: 'Anger',\r\n        tile: 315,\r\n        cost: 68000,\r\n        towns: ['Paititi'],\r\n    },\r\n    {\r\n        name: 'Town Portal',\r\n        tile: 100,\r\n        cost: 250,\r\n        towns: [\r\n            'Aria',\r\n            \"S'thel\",\r\n            'Dondheim',\r\n            'Gombard',\r\n            'Hermit',\r\n            'Nordolk',\r\n            'Toronega',\r\n            'Paititi',\r\n            'Thule',\r\n            'Cennyn',\r\n            'Naleg',\r\n            'Tal Mita',\r\n            'Kor',\r\n            'Ynys',\r\n            'Tal Nivek',\r\n            'Airlon',\r\n        ],\r\n    },\r\n    {\r\n        name: 'Red Potion',\r\n        tile: 80,\r\n        cost: 25,\r\n        towns: [\r\n            'Aria',\r\n            \"S'thel\",\r\n            'Dondheim',\r\n            'Gombard',\r\n            'Nordolk',\r\n            'Toronega',\r\n            'Paititi',\r\n            'Thule',\r\n            'Cennyn',\r\n            'Naleg',\r\n            'Tal Mita',\r\n            'Kor',\r\n            'Ynys',\r\n            'Tal Nivek',\r\n            'Airlon',\r\n        ],\r\n    },\r\n    {\r\n        name: 'Blue Potion',\r\n        tile: 83,\r\n        cost: 80,\r\n        towns: [\r\n            'Aria',\r\n            \"S'thel\",\r\n            'Dondheim',\r\n            'Gombard',\r\n            'Hermit',\r\n            'Nordolk',\r\n            'Toronega',\r\n            'Paititi',\r\n            'Thule',\r\n            'Cennyn',\r\n            'Naleg',\r\n            'Tal Mita',\r\n            'Kor',\r\n            'Ynys',\r\n            'Tal Nivek',\r\n            'Airlon',\r\n        ],\r\n    },\r\n    {\r\n        name: 'Purple Potion',\r\n        tile: 79,\r\n        cost: 220,\r\n        towns: [\r\n            \"S'thel\",\r\n            'Dondheim',\r\n            'Gombard',\r\n            'Nordolk',\r\n            'Toronega',\r\n            'Paititi',\r\n            'Thule',\r\n            'Cennyn',\r\n            'Naleg',\r\n            'Tal Mita',\r\n            'Kor',\r\n            'Ynys',\r\n            'Tal Nivek',\r\n            'Airlon',\r\n        ],\r\n    },\r\n    {\r\n        name: 'Turq Potion',\r\n        tile: 126,\r\n        cost: 450,\r\n        towns: [\r\n            \"S'thel\",\r\n            'Dondheim',\r\n            'Gombard',\r\n            'Nordolk',\r\n            'Toronega',\r\n            'Paititi',\r\n            'Thule',\r\n            'Cennyn',\r\n            'Naleg',\r\n            'Tal Mita',\r\n            'Kor',\r\n            'Ynys',\r\n            'Tal Nivek',\r\n            'Airlon',\r\n        ],\r\n    },\r\n    {\r\n        name: 'Orange Potion',\r\n        tile: 127,\r\n        cost: 1000,\r\n        towns: [\r\n            \"S'thel\",\r\n            'Dondheim',\r\n            'Gombard',\r\n            'Nordolk',\r\n            'Toronega',\r\n            'Paititi',\r\n            'Thule',\r\n            'Cennyn',\r\n            'Naleg',\r\n            'Tal Mita',\r\n            'Kor',\r\n            'Ynys',\r\n            'Tal Nivek',\r\n            'Airlon',\r\n        ],\r\n    },\r\n    {\r\n        name: 'Green Potion',\r\n        tile: 85,\r\n        cost: 30,\r\n        towns: [\r\n            'Aria',\r\n            \"S'thel\",\r\n            'Dondheim',\r\n            'Gombard',\r\n            'Nordolk',\r\n            'Toronega',\r\n            'Paititi',\r\n            'Thule',\r\n            'Cennyn',\r\n            'Naleg',\r\n            'Tal Mita',\r\n            'Kor',\r\n            'Ynys',\r\n            'Tal Nivek',\r\n            'Airlon',\r\n        ],\r\n    },\r\n    {\r\n        name: 'Aqua Potion',\r\n        tile: 124,\r\n        cost: 130,\r\n        towns: [\r\n            \"S'thel\",\r\n            'Dondheim',\r\n            'Gombard',\r\n            'Nordolk',\r\n            'Toronega',\r\n            'Paititi',\r\n            'Thule',\r\n            'Cennyn',\r\n            'Naleg',\r\n            'Tal Mita',\r\n            'Kor',\r\n            'Ynys',\r\n            'Tal Nivek',\r\n            'Airlon',\r\n            'Thicket',\r\n        ],\r\n    },\r\n    {\r\n        name: 'Gold Potion',\r\n        tile: 125,\r\n        cost: 270,\r\n        towns: [\r\n            \"S'thel\",\r\n            'Dondheim',\r\n            'Gombard',\r\n            'Nordolk',\r\n            'Toronega',\r\n            'Paititi',\r\n            'Thule',\r\n            'Cennyn',\r\n            'Naleg',\r\n            'Tal Mita',\r\n            'Kor',\r\n            'Ynys',\r\n            'Tal Nivek',\r\n            'Airlon',\r\n            'Thicket',\r\n        ],\r\n    },\r\n    {\r\n        name: 'Pale Potion',\r\n        tile: 317,\r\n        cost: 525,\r\n        towns: [\r\n            \"S'thel\",\r\n            'Gombard',\r\n            'Durnik',\r\n            'Nordolk',\r\n            'Toronega',\r\n            'Paititi',\r\n            'Thule',\r\n            'Cennyn',\r\n            'Naleg',\r\n            'Tal Mita',\r\n            'Kor',\r\n            'Ynys',\r\n            'Tal Nivek',\r\n            'Airlon',\r\n        ],\r\n    },\r\n];\r\nexport default function MagicShops() {\r\n    return (\r\n        <Table\r\n            header={['Icon', 'Name', 'Price', 'Location']}\r\n            rows={shops.reduce((acc, item) => {\r\n                return [\r\n                    ...acc,\r\n                    {\r\n                        id: item.name.split(' ').join('_'),\r\n                        data: [\r\n                            <Sprite tile={item.tile} spriteSheet='tiles' className='sprite' title={item.name} alt={item.name} />,\r\n                            <Link to={`/items#${item.name.split(' ').join('_')}`}>{item.name}</Link>,\r\n                            item.cost,\r\n                            <div className='maxScroll'>\r\n                                <ul>\r\n                                    {item.towns.map((town, id) => (\r\n                                        <li key={id}>{town}</li>\r\n                                    ))}\r\n                                </ul>\r\n                            </div>,\r\n                        ],\r\n                    },\r\n                ];\r\n            }, [])}\r\n        />\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Table from './Table';\r\nimport Sprite from './Sprite';\r\n\r\nconst shops = [\r\n    {\r\n        name: 'Skull',\r\n        tile: 238,\r\n        cost: 100000,\r\n        towns: ['Necro'],\r\n    },\r\n    {\r\n        name: 'Tooth Dagger',\r\n        tile: 212,\r\n        cost: 1500,\r\n        requirement: 'Tooth Ache',\r\n        towns: ['Aria'],\r\n    },\r\n    {\r\n        name: 'Lava Bow',\r\n        tile: 221,\r\n        cost: 63600,\r\n        requirement: 'Medicine Man',\r\n        towns: [\"S'thel\"],\r\n    },\r\n    {\r\n        name: 'Band of Odin',\r\n        tile: 9,\r\n        cost: 45500,\r\n        requirement: 'The Treaty',\r\n        towns: ['Donheim'],\r\n    },\r\n    {\r\n        name: 'Elven Boots',\r\n        tile: 20,\r\n        cost: 7000,\r\n        requirement: 'The Treaty',\r\n        towns: ['Donheim'],\r\n    },\r\n    {\r\n        name: 'Crusader Shield',\r\n        tile: 3,\r\n        cost: 26000,\r\n        requirement: 'The Treaty',\r\n        towns: ['Donheim'],\r\n    },\r\n    {\r\n        name: 'Lion Shield',\r\n        tile: 220,\r\n        cost: 56000,\r\n        requirement: 'Hyrda Claw',\r\n        towns: ['Gombard'],\r\n    },\r\n    {\r\n        name: 'Spade',\r\n        tile: 237,\r\n        cost: 500,\r\n        towns: [\r\n            'Aria',\r\n            \"S'thel\",\r\n            'Donheim',\r\n            'Gombard',\r\n            'Durnik',\r\n            'Hermit',\r\n            'Jungle',\r\n            'Nordolk',\r\n            'Toronega',\r\n            'Paititi',\r\n            'Thule',\r\n            'Cennyn',\r\n            'Naleg',\r\n            'Tal Mita',\r\n            'Kor',\r\n            'Ynys',\r\n            'Tal Nivek',\r\n            'Airlon',\r\n        ],\r\n    },\r\n    {\r\n        name: 'Fishing Pole',\r\n        tile: 235,\r\n        cost: 500,\r\n        towns: [\r\n            'Aria',\r\n            \"S'thel\",\r\n            'Donheim',\r\n            'Gombard',\r\n            'Hermit',\r\n            'Jungle',\r\n            'Nordolk',\r\n            'Toronega',\r\n            'Paititi',\r\n            'Thule',\r\n            'Cennyn',\r\n            'Naleg',\r\n            'Tal Mita',\r\n            'Kor',\r\n            'Ynys',\r\n            'Tal Nivek',\r\n            'Airlon',\r\n        ],\r\n    },\r\n    {\r\n        name: 'Lava Rod',\r\n        tile: 319,\r\n        cost: 5000,\r\n        requirement: 'Dragon Bashing',\r\n        towns: ['Gombard'],\r\n    },\r\n    {\r\n        name: 'Lava Rod',\r\n        tile: 319,\r\n        cost: 5000,\r\n        towns: ['Thule', 'Cennyn', 'Naleg', 'Tal Mita', 'Kor', 'Ynys', 'Tal Nivek', 'Airlon'],\r\n    },\r\n    {\r\n        name: 'Attack Elixir',\r\n        tile: 76,\r\n        cost: 150000,\r\n        towns: ['Nordolk'],\r\n    },\r\n    {\r\n        name: 'Apple',\r\n        tile: 81,\r\n        cost: 4,\r\n        towns: ['Aria', \"S'thel\", 'Donheim', 'Gombard', 'Jungle'],\r\n    },\r\n    {\r\n        name: 'Meat',\r\n        tile: 98,\r\n        cost: 5,\r\n        towns: [\r\n            'Aria',\r\n            \"S'thel\",\r\n            'Donheim',\r\n            'Gombard',\r\n            'Durnik',\r\n            'Jungle',\r\n            'Nordolk',\r\n            'Toronega',\r\n            'Paititi',\r\n            'Thule',\r\n            'Cennyn',\r\n            'Naleg',\r\n            'Tal Mita',\r\n            'Kor',\r\n            'Ynys',\r\n            'Tal Nivek',\r\n            'Airlon',\r\n        ],\r\n    },\r\n    {\r\n        name: 'Chop',\r\n        tile: 265,\r\n        cost: 100,\r\n        towns: ['Jungle'],\r\n    },\r\n    {\r\n        name: 'Trap',\r\n        tile: 78,\r\n        cost: 50,\r\n        towns: [\r\n            'Aria',\r\n            \"S'thel\",\r\n            'Donheim',\r\n            'Gombard',\r\n            'Durnik',\r\n            'Hermit',\r\n            'Jungle',\r\n            'Nordolk',\r\n            'Toronega',\r\n            'Paititi',\r\n            'Thule',\r\n            'Cennyn',\r\n            'Naleg',\r\n            'Tal Mita',\r\n            'Kor',\r\n            'Ynys',\r\n            'Tal Nivek',\r\n            'Airlon',\r\n        ],\r\n    },\r\n    {\r\n        name: 'Powder Keg',\r\n        tile: 73,\r\n        cost: 2000,\r\n        towns: [\r\n            'Aria',\r\n            \"S'thel\",\r\n            'Donheim',\r\n            'Gombard',\r\n            'Jungle',\r\n            'Nordolk',\r\n            'Toronega',\r\n            'Paititi',\r\n            'Thule',\r\n            'Cennyn',\r\n            'Naleg',\r\n            'Tal Mita',\r\n            'Kor',\r\n            'Ynys',\r\n            'Tal Nivek',\r\n            'Airlon',\r\n        ],\r\n    },\r\n    {\r\n        name: 'Pet Food',\r\n        tile: 386,\r\n        cost: 200,\r\n        towns: [\r\n            'Aria',\r\n            \"S'thel\",\r\n            'Donheim',\r\n            'Gombard',\r\n            'Durnik',\r\n            'Hermit',\r\n            'Jungle',\r\n            'Nordolk',\r\n            'Toronega',\r\n            'Paititi',\r\n            'Thule',\r\n            'Cennyn',\r\n            'Naleg',\r\n            'Tal Mita',\r\n            'Kor',\r\n            'Ynys',\r\n            'Tal Nivek',\r\n            'Airlon',\r\n        ],\r\n    },\r\n    {\r\n        name: 'Octopus',\r\n        tile: 507,\r\n        cost: 740,\r\n        towns: ['Thicket'],\r\n    },\r\n    {\r\n        name: 'Grog',\r\n        tile: 411,\r\n        cost: 100,\r\n        towns: ['Thicket'],\r\n    },\r\n    {\r\n        name: 'Horse Hair',\r\n        tile: 309,\r\n        cost: 25000,\r\n        towns: ['Paititi'],\r\n    },\r\n    {\r\n        name: 'Gold Plate',\r\n        tile: 308,\r\n        cost: 40000,\r\n        towns: ['Thule', 'Cennyn', 'Naleg', 'Tal Mita', 'Kor', 'Ynys', 'Tal Nivek', 'Airlon'],\r\n    },\r\n];\r\nexport default function InnShops() {\r\n    return (\r\n        <Table\r\n            header={['Icon', 'Name', 'Price', 'Location', 'Requirement']}\r\n            rows={shops.reduce((acc, item) => {\r\n                return [\r\n                    ...acc,\r\n                    {\r\n                        id: item.name.split(' ').join('_'),\r\n                        data: [\r\n                            <Sprite tile={item.tile} spriteSheet='tiles' className='sprite' title={item.name} alt={item.name} />,\r\n                            <Link to={`/items#${item.name.split(' ').join('_')}`}>{item.name}</Link>,\r\n                            item.cost,\r\n                            <div className='maxScroll'>\r\n                                <ul>\r\n                                    {item.towns.map((town, id) => (\r\n                                        <li key={id}>{town}</li>\r\n                                    ))}\r\n                                </ul>\r\n                            </div>,\r\n                            item.requirement ? (\r\n                                <>\r\n                                    Complete <Link to={`/quests#${item.requirement.split(' ').join('_')}`}>{item.requirement}</Link>\r\n                                </>\r\n                            ) : (\r\n                                '–'\r\n                            ),\r\n                        ],\r\n                    },\r\n                ];\r\n            }, [])}\r\n        />\r\n    );\r\n}\r\n","import React, { useEffect } from 'react';\r\n\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport H2 from '../components/H2';\r\nimport H3 from '../components/H3';\r\nimport PageHeader from '../components/PageHeader';\r\n\r\nimport GearsShops from '../components/GearsShops';\r\nimport MagicShops from '../components/MagicShops';\r\nimport InnShops from '../components/InnShops';\r\n\r\nexport default function Activities() {\r\n    const hash = useLocation().hash;\r\n\r\n    useEffect(() => {\r\n        if (hash && document.querySelector(hash)) {\r\n            document.querySelector(hash).scrollIntoView();\r\n        } else {\r\n            window.scrollTo(0, 0);\r\n        }\r\n    });\r\n\r\n    return (\r\n        <main className='content'>\r\n            <H2>Shops</H2>\r\n            <PageHeader\r\n                tablaOfContent={['gears shops', 'magic shops', 'inn shops'].reduce((acc, item) => {\r\n                    return [...acc, <a href={`#${item.split(' ').join('_')}`}>{item.substring(0, 1).toUpperCase() + item.substring(1)}</a>];\r\n                }, [])}\r\n            ></PageHeader>\r\n            <section id='gears_shops' className='anchor-Zone'>\r\n                <H3>Gears Shops</H3>\r\n                <div>\r\n                    <GearsShops />\r\n                </div>\r\n            </section>\r\n            <section id='magic_shops' className='anchor-Zone'>\r\n                <H3>Magic Shops</H3>\r\n                <div>\r\n                    <MagicShops />\r\n                </div>\r\n            </section>\r\n            <section id='inn_shops' className='anchor-Zone'>\r\n                <H3>Inn Shops</H3>\r\n                <div>\r\n                    <InnShops />\r\n                </div>\r\n            </section>\r\n        </main>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport H2 from '../components/H2';\r\n\r\nexport default function Map() {\r\n    const [mapHeight, setMapHeight] = useState(window.innerHeight * 0.8);\r\n    const hash = useLocation().hash;\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', () => {\r\n            setMapHeight(window.innerHeight * 0.8);\r\n        });\r\n\r\n        window.scrollTo(0, 0);\r\n    }, []);\r\n\r\n    return (\r\n        <main className='content'>\r\n            <H2>World Map</H2>\r\n\r\n            <section>\r\n                <div>\r\n                    <object\r\n                        type='text/html'\r\n                        data={process.env.PUBLIC_URL + '/map' + hash}\r\n                        width='100%'\r\n                        height={`${mapHeight}px`}\r\n                        style={{ overflow: 'auto', border: '2px solid lightblue' }}\r\n                        aria-label='If you see this message contact me on Dicord : Polfy#6924'\r\n                        inner-text='If you see this message contact me on Dicord : Polfy#6924'\r\n                        aria-labelledby='If you see this message contact me on Dicord : Polfy#6924'\r\n                    ></object>\r\n                </div>\r\n            </section>\r\n        </main>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nimport Navigation from './components/Navigation/';\r\nimport Footer from './components/Footer/';\r\n\r\nimport Home from './pages/Home';\r\nimport Player from './pages/Player';\r\nimport Items from './pages/Items';\r\nimport Monsters from './pages/Monsters';\r\nimport Dungeons from './pages/Dungeons';\r\nimport Quests from './pages/Quests';\r\nimport Activities from './pages/Activities';\r\nimport Shops from './pages/Shops';\r\nimport Map from './pages/Map';\r\n\r\nexport default function App() {\r\n    return (\r\n        <>\r\n            <Navigation />\r\n            <Switch>\r\n                <Route exact path='/'>\r\n                    <Home />\r\n                </Route>\r\n                <Route exact path='/player'>\r\n                    <Player />\r\n                </Route>\r\n                <Route exact path='/items'>\r\n                    <Items />\r\n                </Route>\r\n                <Route exact path='/monsters'>\r\n                    <Monsters />\r\n                </Route>\r\n                <Route exact path='/dungeons'>\r\n                    <Dungeons />\r\n                </Route>\r\n                <Route exact path='/quests'>\r\n                    <Quests />\r\n                </Route>\r\n                <Route exact path='/activities'>\r\n                    <Activities />\r\n                </Route>\r\n                <Route exact path='/shops'>\r\n                    <Shops />\r\n                </Route>\r\n                <Route exact path='/world_map'>\r\n                    <Map />\r\n                </Route>\r\n                <Route exact path='*'>\r\n                    <Redirect to={{ pathname: '/' }} />\r\n                </Route>\r\n            </Switch>\r\n            <Footer />\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\n\r\nimport './normalize.css';\r\nimport './styles.css';\r\nimport './wikiStyles.css';\r\n\r\nimport { DataContextProvider } from './context/dataContext';\r\nimport App from './App';\r\n\r\ndocument.querySelector(\r\n    'body'\r\n).style.background = `url('${process.env.PUBLIC_URL}/data/bg-m.jpg') repeat-x fixed left bottom var(--clr-l-blue)`;\r\n\r\nglobal.githubUrl =\r\n    'https://pierreyvesflamand.github.io/Legends-of-Yore-Wiki/build/#';\r\n\r\nReactDOM.render(\r\n    <DataContextProvider>\r\n        <Router>\r\n            <App />\r\n        </Router>\r\n    </DataContextProvider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// const result = [];\r\n// for (let i = 1; i <= 5; i++) {\r\n//     for (let j = 1; j <= 5; j++) {\r\n//         for (let k = 1; k <= 5; k++) {\r\n//             for (let l = 1; l <= 5; l++) {\r\n//                 for (let m = 3; m <= 8; m++) {\r\n//                     // for (let n = 1; n <= 1; n++) {\r\n//                     result.push((i / (i + j + k + l + m)) * 100);\r\n//                     // }\r\n//                 }\r\n//             }\r\n//         }\r\n//     }\r\n// }\r\n// console.log(result.reduce((a, b) => a + b, 0) / result.length);\r\n\r\n// const baseWarHp = 103;\r\n// const baseWarRage = 18;\r\n\r\n// const baseArchHp = 81;\r\n// const baseArchZen = 18;\r\n\r\n// const baseWizHp = 60;\r\n// const baseWizChar = 81;\r\n\r\n// const baseSubRage = 5;\r\n// const baseSubZen = 10;\r\n// const baseSubChar = 7;\r\n// let level = 200;\r\n\r\n// function getStat(level, base) {\r\n//     let stat = base;\r\n\r\n//     for (let i = 10; i <= level; i++) {\r\n//         stat += Math.floor(i / 3);\r\n//     }\r\n\r\n//     return stat;\r\n// }\r\n\r\n// function getSubStat(level, base) {\r\n//     let stat = base;\r\n\r\n//     for (let i = 51; i <= level; i++) {\r\n//         stat += Math.floor((Math.floor(i / 3) * 3 - 40) / 5);\r\n//     }\r\n\r\n//     return stat;\r\n// }\r\n\r\n// console.log(`Level : ${level}\\n`);\r\n// if (level <= 50) {\r\n//     console.log(`Warrior\\n\\nHP : ${getStat(level, baseWarHp)}\\nRage : ${getStat(level, baseWarRage)}`);\r\n//     console.log(`Archer\\n\\nHP : ${getStat(level, baseArchHp)}\\nZen : ${getStat(level, baseArchZen)}`);\r\n//     console.log(`Wizard\\n\\nHP : ${getStat(level, baseWizHp)}\\nCharge : ${getStat(level, baseWizChar)}`);\r\n// } else {\r\n//     console.log(`Barbarian\\n\\nHP : ${getStat(level, baseWarHp)}\\nRage : ${getStat(level, baseWarRage)}\\nZen : ${getSubStat(level, baseSubZen)}`);\r\n//     console.log(`Paladin\\n\\nHP : ${getStat(level, baseWarHp)}\\nRage : ${getStat(level, baseWarRage)}\\nCharge : ${getSubStat(level, baseSubChar)}`);\r\n\r\n//     console.log(`Rogue\\n\\nHP : ${getStat(level, baseArchHp)}\\nZen : ${getStat(level, baseArchZen)}\\nRage : ${getSubStat(level, baseSubRage)}`);\r\n//     console.log(`Monk\\n\\nHP : ${getStat(level, baseArchHp)}\\nZen : ${getStat(level, baseArchZen)}\\nCharge : ${getSubStat(level, baseSubChar)}`);\r\n\r\n//     console.log(`Warlock\\n\\nHP : ${getStat(level, baseWizHp)}\\nCharge : ${getStat(level, baseWizChar)}\\nRage : ${getSubStat(level, baseSubRage)}`);\r\n//     console.log(`Archmage\\n\\nHP : ${getStat(level, baseWizHp)}\\nCharge : ${getStat(level, baseWizChar)}\\nZen : ${getSubStat(level, baseSubZen)}`);\r\n// }\r\n"],"sourceRoot":""}